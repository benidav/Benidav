(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    500474,       9332]
NotebookOptionsPosition[    496135,       9260]
NotebookOutlinePosition[    496512,       9276]
CellTagsIndexPosition[    496469,       9273]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"S1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "\[Tau]", "]"}], "==", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "4"]}], " ", 
         RowBox[{"x", "[", "\[Tau]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "\[Tau]", "]"}], "2"], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"y", "[", "\[Tau]", "]"}], "2"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "\[Tau]", "]"}], "==", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         RowBox[{"y", "[", "\[Tau]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"x", "[", "\[Tau]", "]"}], "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox[
             RowBox[{"y", "[", "\[Tau]", "]"}], "2"]}], "+", 
           RowBox[{"0", "*", "2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Sqrt]", "0.32"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Sqrt]", "0.68"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "10"}], ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.728206569704014*^9, 3.728206872216963*^9}, 
   3.728206910920508*^9, {3.728206992284874*^9, 3.728207003940414*^9}, {
   3.728207174949332*^9, 3.7282071809132843`*^9}, 3.728207216086773*^9, {
   3.7282242509875164`*^9, 3.7282243506132526`*^9}, {3.7327128539442577`*^9, 
   3.7327128565741105`*^9}, {3.7327129799731617`*^9, 
   3.7327129880024996`*^9}, {3.7327131728767433`*^9, 3.732713225180594*^9}, {
   3.7327133141730604`*^9, 3.732713316318892*^9}, {3.7327152289338803`*^9, 
   3.732715231358469*^9}, {3.732771968920146*^9, 3.732772028498271*^9}, 
   3.7328104792787175`*^9, {3.7328118722870307`*^9, 3.7328118731923847`*^9}, {
   3.7328119504765415`*^9, 3.7328119824069347`*^9}, {3.7328127539596224`*^9, 
   3.73281275639825*^9}, {3.7328128594716153`*^9, 3.7328128652272243`*^9}, {
   3.7328148367793818`*^9, 3.7328148389904995`*^9}, {3.738242493059352*^9, 
   3.738242515652231*^9}, {3.738242547299987*^9, 3.738242547527989*^9}, {
   3.7382428936379404`*^9, 3.738242893989766*^9}, {3.7382429389397345`*^9, 
   3.7382429438742332`*^9}, {3.738243113435896*^9, 3.7382431167234755`*^9}, {
   3.7382432396044526`*^9, 3.7382432710573573`*^9}, 3.7382433153718953`*^9, {
   3.738243423851289*^9, 3.7382434262232914`*^9}, 3.7382434947232723`*^9, {
   3.7382505407858872`*^9, 3.7382505458018866`*^9}, {3.738250592765873*^9, 
   3.7382506087458773`*^9}, {3.7383003113233*^9, 3.7383003117812414`*^9}, {
   3.7383434971103783`*^9, 
   3.738343514298376*^9}},ExpressionUUID->"a4099d8c-5c38-4ceb-a55a-\
ab87707b22d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "\[Tau]", "]"}], "==", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "4"]}], " ", 
         RowBox[{"x", "[", "\[Tau]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "\[Tau]", "]"}], "2"], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"y", "[", "\[Tau]", "]"}], "2"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "\[Tau]", "]"}], "==", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         RowBox[{"y", "[", "\[Tau]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"x", "[", "\[Tau]", "]"}], "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox[
             RowBox[{"y", "[", "\[Tau]", "]"}], "2"]}], "+", 
           RowBox[{"0.001", "*", "2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Sqrt]", "0.32"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Sqrt]", "0.68"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "10"}], ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7282243593613324`*^9, 3.728224365846405*^9}, {
   3.7327128594571934`*^9, 3.7327128620581236`*^9}, {3.7327129907708583`*^9, 
   3.73271299213348*^9}, {3.732713205327614*^9, 3.732713211732893*^9}, {
   3.732713317596943*^9, 3.7327133184833713`*^9}, {3.7327152230950174`*^9, 
   3.73271522535697*^9}, {3.7327719715755043`*^9, 3.7327720298639097`*^9}, 
   3.7328104803649516`*^9, 3.73281089623326*^9, {3.732811874846469*^9, 
   3.732811876372464*^9}, 3.7328119239238763`*^9, {3.73281195630177*^9, 
   3.732811985063644*^9}, {3.7328127472562957`*^9, 3.7328127517355576`*^9}, {
   3.7328128683141546`*^9, 3.7328128727724314`*^9}, 3.732813299497913*^9, {
   3.7328137718047953`*^9, 3.732813784822137*^9}, 3.732814617287757*^9, 
   3.732814843410987*^9, {3.7382425249565363`*^9, 3.7382425505941725`*^9}, {
   3.738242912637598*^9, 3.73824294604233*^9}, {3.7382431191580877`*^9, 
   3.7382431257797318`*^9}, {3.73824324936871*^9, 3.7382432737062235`*^9}, 
   3.7382433180537605`*^9, {3.7382434326872916`*^9, 3.7382434609792814`*^9}, 
   3.7382434976272697`*^9, 3.7382505521738863`*^9, 3.7382506143778734`*^9, {
   3.738300313342081*^9, 3.738300313740017*^9}, {3.738343501575147*^9, 
   3.738343516635677*^9}},ExpressionUUID->"bc3849ae-286b-4cbd-8c1d-\
487fd12b0418"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndsz",
   "\"At \\!\\(\\*RowBox[{\\\"\[Tau]\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"4.764212306729036`\\\"}]\\), step size is effectively zero; singularity \
or stiff system suspected.\"",2,38,9,32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7382434354073167`*^9, {3.73824347037531*^9, 3.7382435089513006`*^9}, 
   3.738250558729912*^9, 3.7382506211658945`*^9, 3.7383003209639177`*^9, 
   3.7383408090663195`*^9, 3.738343222026142*^9, 3.738343521932444*^9, 
   3.738387151321454*^9, 
   3.7384096158273463`*^9},ExpressionUUID->"6a101f97-edb1-46ea-adef-\
642454ea81be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S3", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "\[Tau]", "]"}], "==", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "4"]}], " ", 
         RowBox[{"x", "[", "\[Tau]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "\[Tau]", "]"}], "2"], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"y", "[", "\[Tau]", "]"}], "2"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "\[Tau]", "]"}], "==", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         RowBox[{"y", "[", "\[Tau]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"x", "[", "\[Tau]", "]"}], "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox[
             RowBox[{"y", "[", "\[Tau]", "]"}], "2"]}], "+", 
           RowBox[{"0.005", "*", "2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Sqrt]", "0.32"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Sqrt]", "0.68"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "10"}], ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7282243740191526`*^9, 3.728224376675686*^9}, 
   3.7282244979607277`*^9, {3.732712864573245*^9, 3.7327128672099886`*^9}, {
   3.732712993897169*^9, 3.7327129951204205`*^9}, {3.7327132207973185`*^9, 
   3.732713231358576*^9}, 3.732713274000859*^9, {3.7327133202027216`*^9, 
   3.732713323465312*^9}, {3.7327152342874126`*^9, 3.732715236419381*^9}, {
   3.7327719739803486`*^9, 3.732772031114727*^9}, 3.732810481156542*^9, 
   3.732810898519842*^9, {3.7328118815701623`*^9, 3.732811882942232*^9}, 
   3.7328119245288773`*^9, {3.7328119619669676`*^9, 3.732811987385147*^9}, {
   3.7328127591339006`*^9, 3.732812762364622*^9}, {3.7328128751113243`*^9, 
   3.7328128866260986`*^9}, 3.7328132999924493`*^9, {3.732813772981928*^9, 
   3.7328137857265415`*^9}, 3.732814620549599*^9, 3.7328148458113804`*^9, {
   3.7382425268560624`*^9, 3.738242552989976*^9}, 3.7382429150546727`*^9, {
   3.7382429487632275`*^9, 3.738242950829669*^9}, {3.7382431285995703`*^9, 
   3.738243138275913*^9}, 3.738243265052013*^9, 3.738243319834094*^9, {
   3.738243440143287*^9, 3.738243463543283*^9}, 3.738243500307273*^9, 
   3.7382505541858826`*^9, 3.73825061714187*^9, {3.7383003155642858`*^9, 
   3.7383003159362903`*^9}, {3.7383435053247385`*^9, 
   3.738343518042278*^9}},ExpressionUUID->"c99eea1f-ff0a-4030-b48e-\
af183545a0cc"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndsz",
   "\"At \\!\\(\\*RowBox[{\\\"\[Tau]\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.6895548170001193`\\\"}]\\), step size is effectively zero; singularity \
or stiff system suspected.\"",2,39,10,32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7382433285138607`*^9, {3.738243443107318*^9, 3.7382434704113083`*^9}, {
   3.738243500759302*^9, 3.738243508987298*^9}, 3.73825055876591*^9, 
   3.73825062120988*^9, 3.7383003210227604`*^9, 3.738340809113191*^9, 
   3.738343222070022*^9, 3.738343521969346*^9, 3.7383871513734245`*^9, 
   3.7384096158753705`*^9},ExpressionUUID->"4a9951d2-9ca6-4546-9b1f-\
3b1e0913fe8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S4", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "\[Tau]", "]"}], "==", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "4"]}], " ", 
         RowBox[{"x", "[", "\[Tau]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "\[Tau]", "]"}], "2"], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"y", "[", "\[Tau]", "]"}], "2"]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "\[Tau]", "]"}], "==", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         RowBox[{"y", "[", "\[Tau]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"x", "[", "\[Tau]", "]"}], "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox[
             RowBox[{"y", "[", "\[Tau]", "]"}], "2"]}], "+", 
           RowBox[{"0.01", "*", "2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Sqrt]", "0.32"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Sqrt]", "0.68"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "10"}], ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728224383532996*^9, 3.728224385595627*^9}, 
   3.7282245001015806`*^9, {3.7327132364370456`*^9, 3.732713241868187*^9}, {
   3.7327133270390873`*^9, 3.7327133288336506`*^9}, {3.732715239007733*^9, 
   3.7327152410280914`*^9}, {3.7327719768110304`*^9, 3.7327720320943108`*^9}, 
   3.73281048230567*^9, {3.7328109007827587`*^9, 3.732810903489005*^9}, {
   3.7328118844223747`*^9, 3.732811885791021*^9}, 3.7328119254155984`*^9, {
   3.7328119679873285`*^9, 3.7328119896880302`*^9}, {3.732812765451268*^9, 
   3.732812768679841*^9}, {3.73281288952388*^9, 3.7328128926582394`*^9}, {
   3.732813300996544*^9, 3.7328133043337717`*^9}, {3.7328137744267654`*^9, 
   3.73281378803568*^9}, 3.732814847744173*^9, {3.738242528889944*^9, 
   3.7382425555429773`*^9}, 3.738242917603763*^9, {3.7382429534053745`*^9, 
   3.738242955328372*^9}, {3.7382431417738*^9, 3.738243142213801*^9}, 
   3.738243267657833*^9, 3.7382433221529665`*^9, {3.7382434466392865`*^9, 
   3.7382434662192793`*^9}, 3.7382435028832717`*^9, 3.738250556585887*^9, 
   3.7382506194058666`*^9, {3.73830031785623*^9, 3.7383003184493465`*^9}, {
   3.738343509183097*^9, 
   3.738343519657507*^9}},ExpressionUUID->"bea849f7-4ec8-4d59-86d2-\
dd679110e8a8"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndsz",
   "\"At \\!\\(\\*RowBox[{\\\"\[Tau]\\\"}]\\) == \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.225470233970736`\\\"}]\\), step size is effectively zero; singularity \
or stiff system suspected.\"",2,40,11,32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7382433285538807`*^9, {3.73824344982329*^9, 3.738243470451311*^9}, {
   3.738243503303302*^9, 3.7382435090272923`*^9}, 3.73825055880589*^9, 
   3.738250621245866*^9, 3.7383003210557027`*^9, 3.738340809160067*^9, 
   3.738343222105926*^9, 3.738343522006281*^9, 3.738387151421425*^9, 
   3.738409615919346*^9},ExpressionUUID->"3cc31939-9291-4e97-8fff-\
58d06c6ba7b2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox["ParametricPlot",
   FontWeight->"Plain"], 
  StyleBox["[",
   FontWeight->"Plain"], 
  RowBox[{
   RowBox[{
    StyleBox["{",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["Evaluate",
      FontWeight->"Plain"], 
     StyleBox["[",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["{",
       FontWeight->"Plain"], 
      RowBox[{
       RowBox[{
        RowBox[{
         StyleBox["{",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}], "-", "1"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          SuperscriptBox[
           RowBox[{"x", "[", "t", "]"}], "2"]}], 
         StyleBox["}",
          FontWeight->"Plain"]}], 
        StyleBox["/.",
         FontWeight->"Plain"], 
        StyleBox["S1",
         FontWeight->"Plain"]}], 
       StyleBox[",",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["{",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}], "-", "1"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          SuperscriptBox[
           RowBox[{
            StyleBox["x",
             FontWeight->"Plain"], "[", "t", "]"}], "2"]}], 
         StyleBox["}",
          FontWeight->"Plain"]}], 
        StyleBox["/.",
         FontWeight->"Plain"], 
        StyleBox["S2",
         FontWeight->"Plain"]}], 
       StyleBox[",",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["{",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}], "-", "1"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          SuperscriptBox[
           RowBox[{
            StyleBox["x",
             FontWeight->"Plain"], "[", "t", "]"}], "2"]}], 
         StyleBox["}",
          FontWeight->"Plain"]}], 
        StyleBox["/.",
         FontWeight->"Plain"], 
        StyleBox["S3",
         FontWeight->"Plain"]}], 
       StyleBox[",",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["{",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}], "-", "1"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          SuperscriptBox[
           RowBox[{
            StyleBox["x",
             FontWeight->"Plain"], "[", "t", "]"}], "2"]}], 
         StyleBox["}",
          FontWeight->"Plain"]}], 
        StyleBox["/.",
         FontWeight->"Plain"], 
        StyleBox["S4",
         FontWeight->"Plain"]}]}], 
      StyleBox["}",
       FontWeight->"Plain"]}], 
     StyleBox["]",
      FontWeight->"Plain"]}], 
    StyleBox["}",
     FontWeight->"Plain"]}], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "5"}], ",", "1"}], "}"}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Beta]=0\>\"", ",", "\"\<\[Beta]=0.01\>\"", ",", 
       "\"\<\[Beta]=0.05\>\"", ",", "\"\<\[Beta]=0.1\>\""}], "}"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["AxesLabel",
     FontWeight->"Plain"], 
    StyleBox["\[Rule]",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["{",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox[
       RowBox[{"HoldForm", "[", "z", "]"}],
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["HoldForm",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["\"\<\>",
         FontWeight->"Plain"], 
        SuperscriptBox[
         StyleBox["x",
          FontWeight->"Plain"], "2"], 
        StyleBox["\"\<\>",
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox["}",
      FontWeight->"Plain"]}]}], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Mono\>\""}], ",", 
       "10", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Green", ",", "Red", ",", "Yellow"}], "}"}]}],
    FontWeight->"Plain"]}], 
  StyleBox["]",
   FontWeight->"Plain"]}]], "Input",
 CellChangeTimes->{{3.7383871400654573`*^9, 3.738387141985464*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"517e99ce-8261-4f6c-9184-3006ff6bd45f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["ParametricPlot",
   FontWeight->"Plain"], 
  StyleBox["[",
   FontWeight->"Plain"], 
  RowBox[{
   RowBox[{
    StyleBox["{",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["Evaluate",
      FontWeight->"Plain"], 
     StyleBox["[",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["{",
       FontWeight->"Plain"], 
      RowBox[{
       RowBox[{
        RowBox[{
         StyleBox["{",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}], "-", "1"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{"Exp", "[", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"y", "[", "t", "]"}], "2"]}], 
               RowBox[{"2", 
                SuperscriptBox[
                 RowBox[{"x", "[", "t", "]"}], "2"]}]], "-", 
              FractionBox["1", "2"]}], ")"}], "2"], "]"}]}], 
         StyleBox["}",
          FontWeight->"Plain"]}], 
        StyleBox["/.",
         FontWeight->"Plain"], 
        StyleBox["S1",
         FontWeight->"Plain"]}], 
       StyleBox[",",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["{",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}], "-", "1"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{"Exp", "[", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"y", "[", "t", "]"}], "2"]}], 
               RowBox[{"2", 
                SuperscriptBox[
                 RowBox[{"x", "[", "t", "]"}], "2"]}]], "-", 
              FractionBox["1", "2"]}], ")"}], "2"], "]"}]}], 
         StyleBox["}",
          FontWeight->"Plain"]}], 
        StyleBox["/.",
         FontWeight->"Plain"], 
        StyleBox["S2",
         FontWeight->"Plain"]}], 
       StyleBox[",",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["{",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}], "-", "1"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{"Exp", "[", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"y", "[", "t", "]"}], "2"]}], 
               RowBox[{"2", 
                SuperscriptBox[
                 RowBox[{"x", "[", "t", "]"}], "2"]}]], "-", 
              FractionBox["1", "2"]}], ")"}], "2"], "]"}]}], 
         StyleBox["}",
          FontWeight->"Plain"]}], 
        StyleBox["/.",
         FontWeight->"Plain"], 
        StyleBox["S3",
         FontWeight->"Plain"]}], 
       StyleBox[",",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["{",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"-", "t"}], "]"}], "-", "1"}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{"Exp", "[", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"y", "[", "t", "]"}], "2"]}], 
               RowBox[{"2", 
                SuperscriptBox[
                 RowBox[{"x", "[", "t", "]"}], "2"]}]], "-", 
              FractionBox["1", "2"]}], ")"}], "2"], "]"}]}], 
         StyleBox["}",
          FontWeight->"Plain"]}], 
        StyleBox["/.",
         FontWeight->"Plain"], 
        StyleBox["S4",
         FontWeight->"Plain"]}]}], 
      StyleBox["}",
       FontWeight->"Plain"]}], 
     StyleBox["]",
      FontWeight->"Plain"]}], 
    StyleBox["}",
     FontWeight->"Plain"]}], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "10"}], ",", "1"}], "}"}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.01", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "1"}], "}"}]}], "}"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Beta]=0\>\"", ",", "\"\<\[Beta]=0.01\>\"", ",", 
       "\"\<\[Beta]=0.05\>\"", ",", "\"\<\[Beta]=0.1\>\""}], "}"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "z", "]"}], ",", 
       RowBox[{"HoldForm", "[", "\"\<Exp[\[Delta]]\>\"", "]"}]}], "}"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Mono\>\""}], ",", 
       "10", ",", 
       RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}],
    FontWeight->"Plain"], 
   StyleBox[",",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Green", ",", "Red", ",", "Yellow"}], "}"}]}],
    FontWeight->"Plain"]}], 
  StyleBox["]",
   FontWeight->"Plain"]}]], "Input",
 CellChangeTimes->{{3.728224414438259*^9, 3.728224468251135*^9}, {
   3.7282246446166615`*^9, 3.7282247439750233`*^9}, {3.728224782880226*^9, 
   3.728224786349345*^9}, {3.732713341221137*^9, 3.7327133873566413`*^9}, {
   3.732715247149533*^9, 3.7327152702811375`*^9}, 3.732717634480122*^9, {
   3.73281092426962*^9, 3.7328109297626085`*^9}, {3.7328132546731973`*^9, 
   3.7328132824771075`*^9}, {3.732813574177144*^9, 3.732813577767689*^9}, {
   3.7328137345748277`*^9, 3.732813735692799*^9}, 3.7328137970616736`*^9, {
   3.7328146500890117`*^9, 3.732814652056371*^9}, {3.7382429789160333`*^9, 
   3.7382429896098747`*^9}, {3.738343435193218*^9, 3.7383434749852877`*^9}, {
   3.73834354487024*^9, 3.7383435563196344`*^9}, {3.738343630329192*^9, 
   3.7383437145385227`*^9}, {3.7383437457757807`*^9, 
   3.7383437843893633`*^9}, {3.738343821619728*^9, 3.7383438261822615`*^9}, {
   3.7384095926993556`*^9, 3.738409623495348*^9}, {3.7384096581153407`*^9, 
   3.7384096616393347`*^9}, {3.7384096945513277`*^9, 3.738409763691345*^9}, {
   3.738410024253065*^9, 3.7384100313130674`*^9}, {3.7384100701050816`*^9, 
   3.7384103295450096`*^9}, 3.7384106610449038`*^9, {3.738410968532823*^9, 
   3.7384109729689603`*^9}, {3.7384210096283073`*^9, 
   3.7384210173723054`*^9}},ExpressionUUID->"874cf025-4b15-4041-a143-\
af40e0d825be"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999775510204081`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,75,133,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738410143961035*^9, 3.738410150777057*^9}, {
   3.7384102019730186`*^9, 3.738410217401016*^9}, {3.738410269253027*^9, 
   3.7384103300850167`*^9}, {3.7384106558889112`*^9, 3.7384106619449015`*^9}, 
   3.738410973607254*^9, 
   3.7384210191203346`*^9},ExpressionUUID->"aa7264cb-2bb6-436d-8064-\
18ecc289a156"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999775510204081`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,75,134,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738410143961035*^9, 3.738410150777057*^9}, {
   3.7384102019730186`*^9, 3.738410217401016*^9}, {3.738410269253027*^9, 
   3.7384103300850167`*^9}, {3.7384106558889112`*^9, 3.7384106619449015`*^9}, 
   3.738410973607254*^9, 
   3.7384210191523137`*^9},ExpressionUUID->"1c8a67d5-9233-4899-b517-\
823d838f177e"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999775510204081`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,75,135,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738410143961035*^9, 3.738410150777057*^9}, {
   3.7384102019730186`*^9, 3.738410217401016*^9}, {3.738410269253027*^9, 
   3.7384103300850167`*^9}, {3.7384106558889112`*^9, 3.7384106619449015`*^9}, 
   3.738410973607254*^9, 
   3.738421019168336*^9},ExpressionUUID->"412e9186-b200-48b4-b676-\
55c384f9de8a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,75,136,32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.738410143961035*^9, 3.738410150777057*^9}, {
   3.7384102019730186`*^9, 3.738410217401016*^9}, {3.738410269253027*^9, 
   3.7384103300850167`*^9}, {3.7384106558889112`*^9, 3.7384106619449015`*^9}, 
   3.738410973607254*^9, 
   3.7384210192043304`*^9},ExpressionUUID->"200a64a9-a646-4141-a0da-\
df91881a4c66"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
         "]]}, Annotation[#, "Charting`Private`Tag$128269#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxN1nc4l9//OHCbyExWVnZUZO9zkBlZ2VSUVUqSMqJkJGUkooWMEBnvUpm3
vSsrZL+MZKTXy0iF+t7n9bsun99f9/W4rrOe536e8zz73Xyt3KkoKCiyKSko
0Pc0bconl1uf4WxHksipu2ugjeV795fjfTtO8tVIpLDp2XFThurnuQudO86Y
7ZhSZGrZMe/vMZ+ijvodV9yKWxtUqN5xuOqvU/+9frvjO7EM/URS2f/mu+bE
2BtatGP7kazUV79e7Pj+FcefBNmsHXuVs7y5AZ7teKro1opjeuqOxRUExW9W
Ju14W9EgxFw6fse15bH52cO3d6wTnZh2kXRrx3Nfurs54sN2XHZnyJdRPnDH
76Z/+HIG+O9Yo8aBz7bi4o4FCsS7gZPXjidKLFRcn5zZsVMxPPbvguuOz5GE
j2tundzxQm5J2k+x/znfcyPmurXLjnsYnNNeq/3/jhehFP6fjQzX9rjTucB7
zWuXy6PXwPcKOoeJJWfIaDNd6x60BhJcjo/79jnDj8v/NHV81gCQdE/kqnSG
esUuJoan8PjCqw+9uO0MlcMmMrr11wCLZdRK/EVn+Ew17bWV2howe3EoNc7G
GSr0mM9uHVwD6UazCl2izvCpTYpPK+cacOBnKjCtd4LH3DMsxb+ugpX0AMep
fCdYw/Xhw9DwKoBJ2yfiEp3g9LUZjtJPq+BIsMaIyGknaKwUuNBasQrWqT9K
mVA4wYy9C3sTElZBdkTaRNBRRxi3sE69V2cVNGSRCggj9rD+ve0dyYoVoNF2
99H5Fnv44TFfcXbZCmBxYSHQl9nDoeZuVuWXK6DMW1TtWrQ93JB6wvz0yQoo
5Rh0kJW3h6pfa7k8bqyAhvdsixv37ODkkUsC70xWwNulJv7MQDu4v8dA4erR
FbCZVl7mcNYOTjNtnzHUXgHutV/bKTTtoPrfM+uC8iugkhTFJbBkC632WmY+
41sBEjqYa7i5LWw5Fc31cpkEzoVaLapq2kJZxUYtv3kSONmoRKQ4gLefyTxi
OEMCNHsyFBqobGH55KVNwWESKLW/wcvwzgbuecTxPbCFBOiybpqmiNjA8PNT
J8uek8CY5CVGO9oT0ErBYFbSlQRmAwvm765YQ75s5/yDLiTgs+Ki1DthDX+z
H7DVciCB6+0FPUmV1lDP4U17uCUJ2KVJu0xdsobawpQpD3RJ4HWB6GLRpBXk
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
YHtKTisin42ZnzmhPoPd0TIxRv4/eXH+cQ==
         "]]}, Annotation[#, "Charting`Private`Tag$128269#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxF2Hc8lt/7AHArRImIkr1XRjZxjhkyGkRpaCBlVCiJktFQiVJUypa9IiU5
NmVkr5AHJSrux66o732e3+/l85fX+3XOfd3Xfa6zHqLHvfY6M9DR0SXQ09Hh
v05rHn48HNwF1w89qfO9PQcaOH629ll3rPq+l24knV3bqmvitbrGPRpXHf/l
w4gae92qt/wadM/+ULnqN8F353pUy1Z9TWvpaOHLV6u+Fc7aSVAL/nvfRUe2
9sDsVTt8SorJWUpbdZTPwQWKUtKqTxVzFF0FzyDH/3skO3jm4POYVUuqCkkG
ld5f9Yqa6WUbuYhVlxeHpyf331i1wfXIWE9q8KrH+1pbN0ZcWXXBrV4vtu1+
qy4Znfbi8fVete67A/z733iuWjBDshU4nlr157zdmseenlj1aaqI9Y7lI6uu
SqJmUD45rHpQ+iyb/RrbVT/n2ufCm2Kzai72Lee2HDNfdc69YmneENNV+7hI
JjovGK2atfyP6IfW/3z/yGSFd9Z/Lt8zvW8k9j8fbJ/4e+z6f+45JVg4420E
GT22ckZdnQMa/AOHo48ZwQ878wXjzs2B4oPXZ0xtjKDIguPP7hNzIJjuthOb
nhHM8P9eDffPAR6vtPDqzUZQNuDv0+e6c8DYyP7USqshZH6V9NCLdQ5s8kzc
rI4MoUThdfoNy7OgyqJMOjDHEE4mW7H2Ts+CkM+yUvrhhlD/aLztWM8sOM2w
jz7Y2BB6qjDKd2XMgox6GXOmMgPYVnk0+bHtLOgwYZvTyTKA/24vGd+1mAUX
zOi5rz0xgGhr14NEOAtua9r56F4ygC++2jbJbZsFN9l8tV01DaBrUZJnIcss
GFT//jziFYRef1mWNKpmwOS+O9OXrwLoATOonhYzQMDz+LUHJwD083Y3kTae
Aa81I9mqdwLIzePxg6o3A7JdC/LdOAHceaR2pkxlBvBF8XN2JOlDn8xGGQn+
GaDnq+3L1KQHnY09ZVmnqEDkJvtKVIEejNQ0H/rwjQqsRzl1NWL0YMtVpuC4
USpI0qi6XXVcD5ZH3e8600cFLoHo2LffO6C+6+LFV7VUsNV1v5SD0g4Ydc26
vDOBCjSixbnMeHfAv/xvTM/HUUH1cMs1qxVdKOyxUUkglgpiRSiZsY268PmF
qWvR96iAkW8fv6KbLvRR7Luz8SoVWPCVR5uk60CjqE1m0k5UwGRMZ5Olrg1V
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
         "]]}, Annotation[#, "Charting`Private`Tag$128269#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxF13c4V98fAHBbiKwoIdkr2UQ6R2VmVBLSkJWiEMpKZBQVklBRVrJXKKtj
S1EI2ZkpSfdjREX9zvV7Ht+/7vN6zr3nnvl+n7PD1vWIAw0VFVUUNRUV+bSh
v//+5PVu6Czps6n21gJ4zfa9vc/kw7pjXDWjqcw71t3wRL176sLbdT+ZfDOm
zNK07q2/hlxy39Suu/z6nYWPSlXrDlJfPl38vGzd4REbughK0X//u2LN3Hk1
d92WA6nxecsZ677refzn6K7UdTuVspVcA0nrHsu9Pnf8cfy6xZQExQIrYta9
qqzrZyodue5XpRGZaf031q0dFp1wkXJ93VN97e2ckQHrLgrvdWVW9F73i/Ef
rtxeHuvWrLbiO1Z+cd0CWWLtwNpp3Z8KDqmdeWS37vMUIZM9K6fWXZdKyRod
sFz3kIQbswX90XU/5jBz5Ek3XTcHy1b3rWcM1u3pKJbi8HP/uqfNbv/wuwbW
ve3sMXHLXXvWTXeAyjRHZfe6MywyvWK71P+b39T5fZOe/1l8qY5F4eR/jgn9
9zlG5z//+rythlnuP6d9TLqewKMOpbicj5deWwCiYoJ8e/6pwafJ/Uzx7gsg
M1H/0uKUGvyZUZmYZbcATndmcWWVq8GuVMLilP4CWAqPU05LVYPtblpU/zQW
gLnmg8biW2pQSOJIVNvOBbCwk+8Lxyk1qB7ZeJvChfszkU33jlYNGpVz/tAe
mwfwJ3+orJkq5M17J305bB4svpLx9NRShTGTbD8y/ObBVPPVxHYJVWgwV5D9
x20e8I9mGTeuqMDw7VJLbCfmgUqQpMTjZyrQceXc1XdK8+Dw3KP4VSoVOCEZ
zKX7dQ7wnyn5tlirBLOc/9IJn5sDjt9KbaYLlKDNEdl/zrZzQEg3LnQ2SQmW
0igPtVjPAX3KpUwxXyXIcUdNusZkDmSdzP9orKQEVd8J0UerzAHayi0yvpmK
cE9eFuUmwxxI09U0s4tXhKvHWvgXqOZA4f3gY9ZhipD+luwN1z8UEMT9peKK
vSK84pUhG0dQwDddsVibHYpw9oG4btIABfRrTHlNJSlAv+xB53MlFGAn8P34
yzsK8IEa5+naAgqgMU8/HH9VAWZWsiaK5+D3dXT2XzupACvElUy3pFLAvLD3
+KKAAvyibZEYG00BqqJ7H3mkyMPPm/uZ37tSgKMGJ3xlvwtKyQ6bWqtSgPj3
/hp9/V3wxPzKNQklCsjVirr+TWYXTAIWLiu7KGA4SfCyz7wcjNaOFq6RooCM
jvOfSoLlYFXM1pO5AhSQJmNElZC5Exo7ZnXTMFJAjresWCitLBTNbe7n+ESA
zmYfOspXGTibZ2fzZpAAT+UMCy+1y0CaOMV/N/sJcDJGWeRFkgxcediis6WH
AE03Jt337ZaBklYmxlfbCOB/JaX+iKc0TN/DKmtWTQAmidqxoV+S0D7OKKw5
mQDqrqfvzIxIQjb4IonmCQHmhhn0OV9LwthNSY37kgjAN6iekBonCf2tHrN3
PiAAB/M3sy5lSZhUVscmc48A7iymP895ScBVOvY9FWHk96ptn05KwFx12AdC
CRCpyubkrCsB+dye57cEE2Bqn+CDel4JyBvF2v41kAA/2rrLvSrFIUscc/hx
PwIcXTCveM8gDtWgcP+8GwHozl0JTyDE4GyrpusLVwJELPKPe/WLwXCl5dCA
iwQ4Z8A6fSFfDNrKnN7I60IAewd6tcMWYlDSucnZ7SwBDnJIRXTlisKUmRMX
qk4RYPsqxcPUUQQm7Kzg9DclwESWfFuvmQikiQ5iyjPB42kQxX1JWwT6o3NC
I8YEkJ6uVu3iF4ER/RMJRkYEcDpEMTTvEoYFjiH8ew0IIDMY83WvrjCez9Gi
gP0EUIpd2XRUZQdMCT7vYLabAPPbNVxqRXdA1/mUy6/UCaDsscqtxb0DMuf0
b5TB/vS7ie/0vBAUO8tQvkENj4dLTLJRsRC8eKnpabcyAR5bj1LVKwrBt+Uo
tFieAMnPTwjc9xOEZQfvpp+WIoB+sGaRubUgbOAVs/0mifsj6HFBWVMQLsvP
nfXGHjFUmz34RwCGvmbUipMgQMKGIeoRfwFII2/xdESMADwOosYhofyw/LtO
SJ4wbt+F3yHUuXxQ3uh1BocAAc7sZnE/EsUHH93NZq/hJwB7z175V5f4YEfg
ERtXbJ+3bfWTu/ngh2NDGe3bCLCSNRZ2qWUrNJsSvpXER4C9/ZdpL3zfAt8c
Nrp7agsB/jyJzN2rzwvvhBYZX+TG7z/79uO8PC9UPsbSrI4t+vQGTe4WXljv
k9ZKi32eod/I5SsPFA38ffkRFwF6Zmf8x2/xQNO6rB0dnAQwmtUtS+zaDKXK
WFKPchCgY2iRtdaTG06+mPR4zkaAm4Ijcg6nuWG9Xz3lNvZTQ4WlbYbcUEkg
tMsRW3zbzJ7a7dzwAuVWwzbsvdm8vV/eckGTATrFCFYChBTMmD+W4IJN7n8d
vDcSwEq6KlRlhgOKKVpP32PG7WVt+ePaxwGnRilV3ti9zzJCKpo4IH2SUvdJ
bIVDnfHXUjhgsN78B0nss5ruOq8tOGCQlsVSLRMBclQFCL1mdri8xXQfFfbs
4+AefbtNcP+mi48zGQngaRP6KVJ7E1xh3zATi70h7WoLZfsmuEeL0yUI++a1
q0OsQ2zwtpY7tTU2g/itY4mWbDB02ceDHbvddcJi9SgrLEM/mUIYCKCa6bxD
2pYFvjhiNhVBTwAXmwl5E20WqK6+29kPe/mYXEO0EAvcbs/C54I9qPuTzv0T
M3TMiv1pjH3z5tHBh6eYYZTGpcdc2CZI/4mfLRMU3Dirl0GH98fm8OiSa4xw
mkFK7jMtAS4GGoh42jLC3562YAC7yk1jxESHEfos9F5sx1ZjGfIwZ2GERZ0S
EpXYL7wjdNITGKAf4/6Fu9gF1I6/FF/Sw/wAvaoD2Iuc93xdmOngfG4xfTUN
AXQqbegE52ghfeGu96XY+eMrTyb6aOHN5r05+dgFIan1hVm0sFLF6GEytrOe
SO0+Q1rYUjlpEorNe11pRiuKBl758Wv6MPa31/XDPJLUUPBg4euf1ASIu/Hj
vD4nNXzIURZFwZ67Izx8e4UKVjmJ2s9gN6gJq5t0UEEe4wzlMWxNPs35Qj8q
WBJ1wu0ddoZ21Vz7s3/AOHODaha28PZDdvYiq8B3+2aJs9jH5E2t/i2vgL1f
P260wy4MyReqe7cCJsxnV09hiw9sjXzluwK+LkVRW2Bb7hfsjuz6AyxL5G7p
YUtXKnFciPoNVIITIqWxa4JPbJPYsQzsZEJil6gI4NhInLr8ZwmsvBXNW8C+
WfZmw9fuJdD1sKSNgj27yZ1Z/dYS2JZtKD6DbfkWSPss/QSBJ7iURrH3Xbrt
6NyzCIxUpjNbseXr9h5WzJsH2UePXc3EpirXMzW6PQ8CPb5czsD2tgtOC3Ge
B71/Br3SsSdam4ZNpedBMSoNTsY+LhEeb5w1B+aSrg8lYLfylgq8y6WAqDid
qxHYhjSsnw/H/ABWDrnc7mR7rWV6ii1+gBi6pmRXsr6bjV0GAj/A0miB/EXs
zCo11a1Zs2D1Qbu1M3bnRPIO9frvQMFh/7ADtktB4LeD1DPgfd35W9bYPHGT
UwFpX8COhAZ9A+wKOrvVhktfQKLUUVN97MLmXX+V930BZbUGlnrYGZX3FWJG
p8A/v4PuOtgJDC5eWsJTgLF39pU2dr/12RD1nEkgJjjYoIEtHFt29X3/GPjY
X20ph839NsZpU8EY8AzflroTu+Ho0E/P4DFwXdTwuyx2T4uZf6HsGIjOZwuX
wbYdXMyYDBwFRXfruyWx5QJyymTlR0Bh4CISwe7Nkd2XfWQAaMQN1fNhHz3F
IX11tR8IxLapkN7w2yH4SWY/CKLYZ20l56tJ27bjXx8QEI+4vwU7MJ2xebSo
F2R7pAfxYJ+g3vvKS7QHpLaEZnCS48VOFy/Q1Q3++Usrkl4ojDjNHtINXvpY
IQ5yfZTezOye6AK3Y3SG2bFlfXVDP2Z9AEkJzHKbsOF+h1h/7Q4wtymOeyPZ
30BqpeeL7eAA17cXLNhVC0JB8tntwGp38QnSsV1uon+52sF3t3vZzNg254Zq
qrrbwNHoMxZM2PqlfE/D9rUBYjsvA+lk3ZGevoJWYJuqUrYBm316jwjf7beg
+0gBH+lA9w7fBcMW4OHpu8BAtocmcfx35Wuw28kun7S3x7mMsJ2vwTDKO0da
ffmfvixnM4hevjBBT46XPFNI6mgD8PbOnqYj18P1DM2mYw3AV6G4gHSgztBl
59Z6wHCQ7zLpkRmL++rldcDfnJ2RdM2Hbov2hBpQxZ2/mxZb8nlH/ThfDbhy
aG4j6cKwz8UtGghYt7uM0pD/+zDHeFKvGoxYMUWSHtmdVzpjUgW852QdSRea
x746alEJRJbCAWl2mTEi+3w5eHuWWKTGPnTwdFq810sgw/a7k3Rhu3K9VdAL
UNm4t2it3JTb3vpRKZBquOpO2o1B3+NBVglITfQxIy0UKr4x++VzsPPVc1XS
NZECf0FfEZi4PkG1Vl/8men66UJwZtPQFBU5P0lGrLt+FwBdd972NRtt2+Mp
lA+sUGw56UDx/GVz/VxgMm2eTjqZ6dVAp3s2iG+2jiY9UrLn2tfETFDM/+zq
ms/aeQ0vpQMKH+cJ0rCZmqZCIg0czlY2Jk11/VedlFUK+PwmBazVX3a30HLL
E7CMjiuRrtHVbgoMegQaX9lIrn1v2cTS8j0ePPtVIrjmAN3XcidjgdULS561
+qR0dQreR4Pv3sab1uqTMU6KiogAvcWxTGsO0HP45hcMXMZ20a+9r2vA2PfZ
G4zcFqJZ88KMt2qDA5DXdqJas78x4/nn+sgmYMP/LXGH8y2NO3oTQEO9Vl/q
VPuG8QD00NCSdq095g9CE6zDkORjFsa18s4KkWfgDnqaJLhxzV5pNf1sMYgl
4B7nWv/iWF0mfO+j3R3OfGvjxdggNz+egIqmMkXWxveSdAqTYSJKUzaSW6v/
6xkr6bwniInTUoO0kOvTxZywFHQl953emu/s9zRUSUNRGsXHSBf2ahHuY+nI
7Rbd2bX59JUqFInMQPtbmr1JH1K89stGPRPdAX9vrf3PNJFdZjQL6X3OSl4r
f1avHnwzB52iaysjzR4hWHJeLg9RNp1/t9be8ur6sc585MMfvLZ+hPwOvm9g
KUKLvxUFyfUFJaDH0EARauR5r0m6V41xGOYUo0O8lONr6zfkbcC0Xgla5m5P
Ii0p0DGrsLkUPd8RU7tWXl/xoGm0FD3RnfhM+qa6K1u/9wuEDHVUyf1C9Zsh
1Qa8RN2+QadJq9PUlWnRl6O+MP0I0pKDq09XIyuQmF/QBGl9Re/k0SOVaK/W
Ly5yvyZkM50Q5KlCbE6MOqS984QOpz+sRgf3U3JI9+5qy5i1foU4fDpHSb++
92nxHj9C9irmW8l4YFOV2bdsXIN25xndIc3P5u0X0lKLshmswsl4E/jxkFKS
RB2Kp3vSSvq261SsQ2gdigpP5iDj0zKd61kGWI8oWuPJpKOlmKuiihqQHE9D
FyO2smu0yk7WRqQUoiNOxj/+Nrkr/k6NaOOfxz6kqSQfnlQQbEJ/nk2JkfFz
xZdp6U9oM8p/pnKfjLey9jVzcp+aUXHg4CJpb93Eps3qr9FYn48lGZ8PXHny
+9+X1yhLKUOEjOeWNTWpxnpvkO/zvZ2s5P87uNzEH79BFHrW/WxkPhrN4S1d
eIPoaRZLSfPvyptbSH6LxifFUsn8YKSk+YL+ZytK+BASS+aT26991GIN25Dj
kxQeMt+0R0SG9T9uQ3KLqw9Jq7+MvhGl+w4V3wrP5sLeeL+vMSXmPbqU5jW5
mczntKIb3rF1IA5Vnfdk/msXbCP0NDpQYOuesG2ks8zuP3DoQD0aWpAfmzmL
5llDZQeqn/euFsAeO5S+rOXYicrNx4eEsAcvfmn1ie5ES5y8+TvI/CWcGhxZ
0YkW/OKChMl4HaoltZ/tA3KzjFIUxZ54qLp/6PkHdG3ZrVoCO/eEKt/E4Ad0
49SPTDJ/s93ppTTQdyH/PJoEKewjuzN3bbboQmwb6IPIfH+It6dsfqkLTZpt
v7YL26lTaHOzYg/iqdZTVcfel9gnF2DVgwQ7Lp/eTfZHU/sCR2APUhZvuk2e
N2z9uwZbW3uQ5mbahT3Yx49Z73hk/xHZ3lr6SZ5PXv16/kc14iMqnlrZtx/7
1BI7dWHBR2Q0nHjvAPZMWAOrxu+P6JBXyz7yvGPvy1BQdKcXnZmAfUZke7Ya
2GoU96Lo4z2GJuT4mDiClJ5edEnOttYUu7j5wgLT9j6Ul5RXfQT7sT9zoWF+
H9Kwq12wJPvr4bsvvakfNVrH2zuS+b61q739cz9SlrFjdcI+9po5epRhAB04
aV15DvuNNB91oe4AamD9K34Bu6Ko2IC2cQDVNj/Q8sTOTHT6YzYxgK6oerNf
xg4jaBLDaQfRhe6aL1fI/Txqz5iuPYgogCbbj6y/YpE9oWoQnVDodQ/G3gC9
GjgHBtGZmxmXQsn5O/5+u8evQfTF0M/nBhlvL3JLTaoMoazuAw9ukd9fefI3
Om8Itan77oglx3dwWXNbwjDyHnI/R553b2utzP4uGUbnBuQ6yPPwrPeWvNqO
YRTxqBPkkPvPsyOZjuUTok4oVyjEDkjJr7b1/4QiKk2dK7C5uBnFDXaOoFKN
Pybt2FX0Dkd+aowgVdN2uQ/Yn07ey43XH0HyK148Pdg/fqlyvbAbQe3vmP8O
kPuTObTx3IMRJMdYpPSFnD82uqBnNKPo3qL4URp8Hxg+/l1HgGMUlRr4SDJg
R3AP8IZuH0WNogIbmLFptkZskdkzikB82jQHeb9RfUfT6YnL73XqCGMfMHj3
tO/6KLpr73VVHHsplr3mQ/Qo0hJPriPvG8fv3ox8kjuKriRQX1bCbg2tWY0b
x9+/0Q7SwTZJetqoRBlF4l3dYobYvZGjzvV/R9H4I/FeE+zHFquhlVvHUFJQ
3llLbH/xy4fYTcdQ4ajxHhfsUwbXuS1ejCHl5wuf47Dpqm7ESzSMoZnIgZBE
8r5jTan+1j6GviheV0rF3tOdIGo6PYYSL39pyCPvV2+N0oP5x1EJqqlrxHYd
670zJzmOwqQDKW+x1YZ/eJurjKPgw4FKndip2n+ClozHkUGAI2UYW1C9Ljkv
YBx9ktc3+4XdlCPXWx0xjhgpQgJU+L546uk1l7q4cWRUl/KHATsR5fRm5o+j
oxn9S9zYG/16f34bGkd/J+GcAvYJpzPGyV/HUWfL8bO7sbdUuVkZLI4jLtmF
OYidfjWr2mfjBFKb2GV6CNtJ1F+GessEirh2UcgS++ULCd+rIhPohIotkw02
e7NjyazcBDLzlmJ2wra/+XXiqMYE2lTfKuyG/T9m28a1
         "]]}, Annotation[#, "Charting`Private`Tag$128269#1"]& ]}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["z", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Exp[\[Delta]]\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0.01, 0.01}, DisplayFunction :> Identity, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Latin Modern Mono", 10, 
       GrayLevel[0]}, Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{0.01, 2}, {0.01, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=0\"", "\"\[Beta]=0.01\"", "\"\[Beta]=0.05\"", 
       "\"\[Beta]=0.1\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Latin Modern Mono", FontSize -> 10, 
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Latin Modern Mono\""}], 
                 ",", "10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.728224447592697*^9, 3.728224468719961*^9}, 
   3.7282245091316724`*^9, {3.7282247091730976`*^9, 3.72822474456332*^9}, {
   3.7282247838490753`*^9, 3.7282247868493967`*^9}, 3.7327114537784758`*^9, 
   3.7327118832633505`*^9, {3.7327132557580986`*^9, 3.7327132856523147`*^9}, 
   3.7327133745035405`*^9, {3.732715248063525*^9, 3.732715270896465*^9}, {
   3.732717615440712*^9, 3.7327176349292984`*^9}, 3.7327719800232773`*^9, {
   3.7327720102802*^9, 3.732772033920164*^9}, {3.732810537460066*^9, 
   3.732810552514558*^9}, {3.7328109085979996`*^9, 3.732810930255968*^9}, 
   3.732811891422104*^9, 3.732811927928024*^9, {3.732811973942198*^9, 
   3.7328119920021906`*^9}, 3.732812772927652*^9, 3.7328128984976454`*^9, {
   3.7328132830964365`*^9, 3.7328133074354253`*^9}, 3.7328135793038034`*^9, 
   3.7328137362262187`*^9, {3.7328137785244293`*^9, 3.7328137978728294`*^9}, 
   3.7328140024010277`*^9, 3.7328146243529825`*^9, 3.7328146674379373`*^9, 
   3.7328148495286307`*^9, 3.732860704580412*^9, 3.7382281514586763`*^9, 
   3.7382281858909445`*^9, 3.7382418278585806`*^9, {3.738242532237322*^9, 
   3.7382425621583834`*^9}, 3.738242920611811*^9, {3.7382429649820147`*^9, 
   3.7382429902141657`*^9}, 3.738243149426214*^9, 3.7382432773339777`*^9, 
   3.7382433286711707`*^9, 3.7382434707553105`*^9, 3.7382435092073007`*^9, 
   3.738250558989911*^9, 3.7382506214298954`*^9, 3.738300321241229*^9, 
   3.7383408094081507`*^9, 3.7383432223288136`*^9, {3.7383434485051737`*^9, 
   3.73834347633692*^9}, {3.7383435221912594`*^9, 3.738343557382105*^9}, {
   3.7383436662123775`*^9, 3.7383437155224752`*^9}, {3.7383437600153136`*^9, 
   3.7383437859141693`*^9}, 3.738343826551276*^9, 3.738387151685454*^9, {
   3.738409597739382*^9, 3.7384096627953653`*^9}, {3.7384097091673546`*^9, 
   3.7384097174633245`*^9}, 3.73840979341133*^9, 3.7384100331090946`*^9, 
   3.738410075673083*^9, {3.7384101070610747`*^9, 3.7384101509370337`*^9}, {
   3.7384102021450524`*^9, 3.7384102175690217`*^9}, {3.7384102694290032`*^9, 
   3.7384103302490172`*^9}, {3.7384106560609365`*^9, 3.738410662100931*^9}, 
   3.7384109737718143`*^9, 
   3.7384210193163376`*^9},ExpressionUUID->"2f3dcf6c-e87d-44a0-b17c-\
172676f2f10f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"1", "-", 
          SuperscriptBox["y", "2"]}], 
         SuperscriptBox["x", "2"]], ")"}]}], "-", 
      FractionBox["1", "2"]}], ")"}], 
    SuperscriptBox["x", "2"]}], "-", 
   SuperscriptBox["y", "2"]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.738241969017527*^9, 
  3.738242023129515*^9}},ExpressionUUID->"985b9cf6-d2ad-49d9-a899-\
adb645a6017e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["y", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.738242023529513*^9, {3.7382425322646666`*^9, 3.7382425621962056`*^9}, 
   3.738242920643791*^9, 3.7382429650140038`*^9, 3.7382432773699684`*^9, 
   3.73824332870745*^9, 3.7382434707832775`*^9, 3.738243509247267*^9, 
   3.7382505590259113`*^9, 3.7382506214578943`*^9, 3.7383003212791376`*^9, 
   3.738340809456024*^9, 3.738343222392643*^9, 3.7383435222192163`*^9, 
   3.738387151709425*^9, 
   3.7384096162313466`*^9},ExpressionUUID->"089a6d43-07a3-431f-97fb-\
30cee44346ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"x", "[", "t", "]"}], "2"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"y", "[", "t", "]"}], "2"]}]}], ")"}]}]}], "}"}], "/.",
         "S1"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"x", "[", "t", "]"}], "2"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"y", "[", "t", "]"}], "2"]}]}], ")"}]}]}], "}"}], "/.",
         "S2"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"x", "[", "t", "]"}], "2"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"y", "[", "t", "]"}], "2"]}]}], ")"}]}]}], "}"}], "/.",
         "S3"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"x", "[", "t", "]"}], "2"], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"y", "[", "t", "]"}], "2"]}]}], ")"}]}]}], "}"}], "/.",
         "S4"}]}], "}"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Beta]=0\>\"", ",", "\"\<\[Beta]=0.01\>\"", ",", 
      "\"\<\[Beta]=0.05\>\"", ",", "\"\<\[Beta]=0.1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "z", "]"}], ",", 
      RowBox[{"HoldForm", "[", "\"\<\[Omega]\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Mono\>\""}], ",", 
      "10", ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Green", ",", "Red", ",", "Yellow"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7327114649940376`*^9, 3.73271154755509*^9}, {
   3.7327116248030815`*^9, 3.732711652276018*^9}, {3.7327118135331345`*^9, 
   3.732711876237974*^9}, {3.7327121875590954`*^9, 3.732712208751045*^9}, {
   3.732712336466215*^9, 3.7327123485141945`*^9}, {3.7327124036725197`*^9, 
   3.7327125395229607`*^9}, {3.732712573735051*^9, 3.7327126087468357`*^9}, {
   3.732712695062625*^9, 3.732712739436819*^9}, {3.7327133998491983`*^9, 
   3.7327135262855806`*^9}, {3.732713760491076*^9, 3.732713794722847*^9}, {
   3.7327139914579744`*^9, 3.732713998681594*^9}, {3.732714136224856*^9, 
   3.732714218158486*^9}, {3.732715373463516*^9, 3.73271539192459*^9}, 
   3.732772042329484*^9, 3.7327722462266617`*^9, {3.732810722320528*^9, 
   3.732810741971592*^9}, {3.732810862232176*^9, 3.732810875420826*^9}, {
   3.7328109438104362`*^9, 3.73281099016173*^9}, {3.7328112819823265`*^9, 
   3.7328113072076893`*^9}, {3.732813225427967*^9, 3.732813233874216*^9}, {
   3.7328135946796455`*^9, 3.7328136702659*^9}, {3.7328139965362372`*^9, 
   3.7328140760238476`*^9}, {3.7328142799104924`*^9, 
   3.7328142990016203`*^9}, {3.7328145034386377`*^9, 3.732814525908713*^9}, {
   3.732814656338696*^9, 3.73281465869825*^9}, 3.7328148215454006`*^9, {
   3.732814928806837*^9, 3.7328149303293514`*^9}, {3.7328149825393686`*^9, 
   3.732815061825259*^9}, 3.7328154467189207`*^9, {3.732815829928135*^9, 
   3.7328159485776277`*^9}, {3.7328159786231637`*^9, 3.73281608435911*^9}, {
   3.732816152926497*^9, 3.7328161852554665`*^9}, {3.732861425475553*^9, 
   3.732861488347205*^9}, {3.7328616646134644`*^9, 3.732861699409464*^9}, {
   3.7382418047505546`*^9, 3.738241859590541*^9}, 3.7382419051535454`*^9, {
   3.7382420291815104`*^9, 3.738242047505505*^9}, {3.7382425765690837`*^9, 
   3.7382425902876277`*^9}, {3.7382428425280447`*^9, 
   3.7382428618219633`*^9}, {3.7382430073461237`*^9, 3.738243008755762*^9}, {
   3.738243160552762*^9, 3.7382431736083856`*^9}, 3.7382432995196776`*^9, {
   3.7382435418712626`*^9, 3.7382435451872597`*^9}, {3.738250632109884*^9, 
   3.738250636181864*^9}, {3.738256521230294*^9, 3.7382565629342833`*^9}, {
   3.7382977930023637`*^9, 3.7382978278900723`*^9}, {3.738300333404947*^9, 
   3.738300347594637*^9}},ExpressionUUID->"5daec9c8-6b34-40ff-9532-\
6b4f41c1a270"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJwV13c8lV8YAHCEFEVCimwhomQmrpWdjIhUZFRIA0UqI9nxsxWSVUnS0LDy
nMjMysye5Rr3vtcOxe/0z72f7+d9z3nPPs8j7HjVwoWBjo7uLf75999WKMnD
7b9GesAnnSXhXwwdXa9Uk2zWSP10Ura1n4phvyXpneLhNZLCMXH64dliiDy2
93A3eZXEO/meP+BiCch48Xs8slolPQzovxJhUwrpnk97GRRXSB0ceTXuFuXg
pvX++u0dK6R+nznG2YRy+J0zmM9J/U1y3pWfs9pZDnk/lx6lP/9NyntKpjy2
+wxGmVrRfPy/Sf2PDENUPCpgf6CpyOuty6Stgon2klYIbpLI+UyTSyTk9XpZ
yQ8B5+cw1Vu1SyS2U5pi0U8Q3PvUwfjp/hJJgcM0acc0gkEV3fRIuiVSakOi
a3DIF9DQOGx75+8CKVkkJdO4rhKcw6jPRlnnSWZP9v88E1YN3u2m/wlPz5EE
Yuv//iipBu2EM1wBDXMkju1m0kUz1TCXu/9eUsQcqfDl+bR7ljWwcIutTWbL
HCnjt+mpBPFaKGWQqp7ZNksqzxlMfNpXB7Sz6wYsBI0UTkfO2c1VD5xFOwo0
W2kk37LdvlSTekiU58/dnEAjHRSx/VgK9cC77HxlejeNxCxeKjL0ogFS7Zpy
f9lSSffO9XWei20EDTupD5mCVFIqQ13eWHMjxLtVq8X9pJCYdz42q9/WBAW1
lsNcnhQS3dz+dx8fNIHmfm36rOgZ0mpCkx7Pf81wMGeUPat5iiRe9CdzxKIV
2pYKDlJuTpBm5orrLj9ogwtd+9vu602QgowD3NhetwFXukWRHs8E6bkp8/T3
721wtFory+DjL5KJRNLjpl3tUM7KIa31+ydpmuX9tqCn7TDXzHH6Z/A4ibv1
j83j2g54cCY6a1PJCKmKQVAxTKwbrqiFSmREj5BMO27ttDLuhv49/tHnHEdI
MV1JBRqe3cBmaHrDjG2EdLXIxsUJdcO7wLm9i+eHSXufd+2YOPsDyEKnV4wk
B0kKex14bz7ugffXJkci9/WQgnODnZ2l+8GEsUhau/cHqU7jfPOyZT+ooIqy
IzE/SF4jIsopd/phXM6xhbrUTao8tLC63NQPlwfy35/51kXqZXWtkL8+AA+M
b8QKBnaQlu7r6uwpGYTYQobmb7taSc6/dfmDng4DbWc6d1gbkJCzyO4ZmTEg
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
9D/qUmv9
         "]]}, Annotation[#, "Charting`Private`Tag$119656#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
heh/o2NlGg==
         "]]}, Annotation[#, "Charting`Private`Tag$119656#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
dzb8c+fwBfr1iFz0P2fhVA8=
         "]]}, Annotation[#, "Charting`Private`Tag$119656#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJwV2nk4lF0UAHC7FhWyheyVnURlHSR7sqRIKaJQokioJFuW7ESULCWpZP0q
4twSipAlu2TLOvOOfee7/pl5fs973/POPXPm3nueZ4Tt3cwd6WhoaErwy+Z7
c544F6ffCil5Xk12crQcWtveKSdarZAc2omcTP4KkLQgFSodWiG12lOPdZpW
QPjxvYfaR5dJ3kdTr/8orQBpD37XJ5bLpKNNzJnVCQBPb77solNaIo2a8vL8
zUfgolV84w7bEukxRWO4vwHBYtafXHbKIml9VqBFnIwgZ3j+ydNXi6Rr5CGV
h5JfwDBdK5KPf5HUFbhhFZXzBST9TUTeb1sgfe5nZNpS+BW8SKO5jGPzJBpx
X6n7rV+Bvfyhsk/NPOniYwkJzYWvEPChleFD0DzJpdWwJF29Ev4c1XkaTjNP
mnf4z3SwvhI0NA5Z312bJRknj9O+Xv0Gf5eJkqTeWVLKs42WHtEqeMutE9dQ
PkuyOj0Za2tUBWkpVJcov1mSeUtptnFqFTg1BGw9RTtL+lzCRNOpUQ0ODynZ
A9tnSNfTEgX/JtSAZ4tJtPDENOmn4qfxqm81oB1/juN+LXaRLnnbXA1Mv5AM
SAybJjF4XzYoOv0dZn1YmqW3TpPmpQ4xBwj8gFI6iarJHVMk1nCbWGVUC9Tz
6/pbCCrpbqiHwr75WmAvYnur+YtK+hrwg+OmdB0kKPC/YI6nkpJXs2rkUuqA
Z8Hh+sQeKin3rB1S9f0JKTb1L/5ZU0jmnzLKEo0bQMNGoiRdkEJq9l7b9ji0
AeJcqlRjh8kkKkeSyMK3BnhbY/GX4yaZ5F0yc6BboxE0JbVpMyInSQc/a2vH
8/0C+ayBXRkN4yRtpyXORv4maJ5/K0/2GiFlfTEwX9Rqgcttks1BuiMkeVMx
AcdLLcDx1LxIl2uEJC583X8hqAXUqrQy9P/7R5qIE+d/9L0FPm9nldJaHCZl
PF+cdDVrhekG1rPDgUOk0JfHZDqdf8Ojc5EZ9J/6SUsuOlGyRe1wXTXkQFpk
P0k165X+l4526OH1i7S17ycZSR+PdltvBxYDk1umLPj6Gw2BvYYdUOg/vXfO
7i/pd2/0SP5AB4wKnV0yFP9DCvw8vPscTxcUu4/1h+/vJLm0K6WGx/WAMUOR
lHZXB0kR+N+MfeqBo6iiTCWqg1Sz9nvlVH8PDMnZN1Lm20lWgp72JvK9cK03
t/hcXRvJN5+iV9HQC4+MbsUI+reSjAJnBkV39EFMHl1DHfcvUmCBnaZa9V+g
7n7K+bAZSFE9nnL31AZhdDWq2ravDFo+at9QnR8B8S08n1ZefIaJmBvLoYyj
IFThfY/sXA4Hb1O2VnKMgn+h/c+mqQrgbUsIW1UYBXHTjPq2VQS8Ko0o8Poo
aN6/F8MzVwlNbZxHu/tHoViYXC76+gco9lVfjvw0BqZsgWq1tLUgdjvGz7Z6
DH45K1NFz9ZCnoLrS76WMej4N0AzvbUODK2LFc5OjoEYa8rGhuNPqO6f7x3d
Ow4v6j7e4WdtBN/xOiWLe+MweuHOgW3czbBo5ZD4QmYCHlmKtglrN8Pq7Iv0
f0cn4O92IXY212aIvRrcxa4zAZmjv354fW0G8aU4acmzE8Bqfe70pastUHKG
L+N08ASYiFte6i9phbaKDP/S9gkYdclVvy7bDgVX+OmtXSfh4j6X4IpT7ZA6
Eae502sSYrY2tY37tsN7ehHI95uEyW2+ezuq22FG8walPHoSivWfDG453wHW
v5VkV/MnIa/k/ZG/AZ0wKpFbIESdhFYO9kHdkm4o7FeWbbQjA/9Q9/uPbd3g
mf0rSMeJDD/rE3K3L3aDrorJwTfXyUAzYplqqdIDs7JVVOM7ZLDyoPjdLe8B
xTqP9qF4MuRk5abLVvRCyHruqXtfySBwVrS4/3UfHNO3s2bgooA/2dAqr6YP
6ofX9rXxUuBamUXIheE+YLhwye2pIAX+W0icPsL6F3qz7ncySVBgZMDlv5eG
f6GTw6fUUpUCRE3LK9ryv+BEU5JPnKfAqVyDuF3J/bBL8uvtvFQKvNjiKnLz
RT/kWxQMrqdRoCuqjqU2vx9k02/l6mXi+EWNHGd/9ENSb1rE1xw8PuIUdWWp
HxT3XfK8UEIB6kR3non1ACTOiPIfq6dAkI3GQ1fWQXgubfCee5ECKbWqIY/4
BmHP7tOVMcs4/lL6XMb+Qbj62puWYY0CAtfv6ubjuvaNn5DvpCXgBf9Ago3T
IPxwWmkmbSfgkWEfdaZ8ENxWHXZs3UvAu9FdWfb2QzC1g8e+R42Abv7Qs4dd
hyDvV8KbTg0Ctnv4LG/cHoL3VmKtTZoELCpd2HMrcgjqBkLWCnUIuJjv0THy
AY/vQ+YqxgQ0j550Xtg2DOl+qydczhKQ3s3+cO31MHTsKdAr9yCg9VMl+Nf/
A+YrweTGZwSk1dQ2PPj9D5Klth8i0ggI9Y//d6f3H+z+dyBzRzoBpuYv9G3I
/4B38O9R/UwCTqcq3a9hGYHLqjKTJdkEnBJJGj1rOALJQVWZ/u/x/A59O0mY
jUDL1YnYJ/kEtJzTFrhnPQIisXzPCgvw/TdEtwQ7jcClGPXjw0UEKIuu5umG
jIDijkeRJh8JmI1aVnyMRoB7p/EzjS8E3JU3/lBZMwLrj98nXPyK85nvuzze
MAIDRg0ZgZUE3DEX79zfOwK50/Fq9VUEVCu3Rp1aGgHGz0wH3WsJUESxQY/k
R6HF4zorfSsBDaGNj62OjILjYm2P+m+cf7v/KgQ0RuHdVy7wbSOgyprd4YnR
KDxUvMC00kGAGXVngv7lUdgZrHiF+w8BKnxL03EpozCeIvGlfpQA9zyZSwPp
oxBFmxMhOU7Ay1yBG9KvRsGKccY8fIKAt0mx3vlFo/Dx/TUuCwoBYan2Jd4/
RyHnUsCB7bMEeNSrt+9YG4WToiOpbDRUIBRmtLbSjwE06D7uxj4exhG3sWUM
yg8rRr6ipcJtM7rZHo4xGKN7GnOcngqKM5FHbKTHQOC8c30KExWUle75OJ8d
g6jgon0FO6igF3xDnfPiGNDRE7lpO6kg9qta8rPjGPiy3XgXtYsKJsO741bc
xyDErcnQi40KjA5URq2HY5BvaVbnwEmF/VysO8YLxyBd5dLO6r1UaHVsMjH8
OAbkMh/1PgEq2PVfWH5ZPgbhqlKuK4JUyNQITTv5fQyYDOMINREqcLrUPLzW
OwYy7u7Ow/vx/QVHlX8xjYNV4uOAFnkqWNI5ppxhGYfy+L1C6gpUUPcK6e1k
GwfTmf3DuYeo0B7/mL+RfxwGXu1miz9MBe4nt2nvKYwD0z9/oSQ1Kqj9XZjr
PjIO07ckJUU1cL6+t08pqY/DxQKnwiISFQT+7mHv1hsHLrF7LgPaOF9mNzzH
z41D/Dj17W0DKqh8bxMVscfjG1j6xI2okF03u37qyjiocAyN/DGmgr7LEcO3
N8bBJFcm19qUCiW/lvOFQ8Yh0HyXRMQZKvCUKsdL5Y3Drir4M3KZCkUFj3fw
FI2DD29u6YQTFdJs9Zc2PowDc7+A8JwLFSZNgpW+fhkHgXDDMh43KthSIv5j
/T0O75l1HV/cpkKygt3tzuVxUM0OzG4Po0JEetWi38Y4fHS2ilZ+RIXCcDkZ
IYYJiDcsL8uIokLUidUKyx0T4H1Va2dwPBUcTJjnIgUnwIW/YSj5GRUOMznv
PnxsAub8z3/ZKMTzGduVdkJvAkI4jc6kllBB0m3kuZ3RBDS4zjKpf6SCcLcN
532LCTi6tt4VV04FvpNy/DGXJuDejfKrYd/x58/POLIjcAL0CvmpuX1U6Dkx
94wcgsfnRza8HaDCfR/eN7XhExAob3ilZJgK1WFOVb5xE/CgL47aNUGF3fdu
GBZlTEBS96EA70UqSOuzsYXCBGxThmKm3VPQECOmolg5AR7V0aw+XFOg4i9+
pLd6AvwKleun90yB1LO5D/saJqBaNit+VWgKnlTUCMX2TIBdNYe/i9wUqIuV
jbYsTkBNs4DBpxNT0JwWmGCyOgEdvBbl2WZTEFG/olG9MQGMVjWkp5ZTsERj
k/KWaRL6ChtTn5+fgoCCuUJLjkm4Ylg2uuX6FNit27/kk5sEl+z7RW4xU5DT
8XJ/nsIkDNSccTyWOAUWcQ0n1Q9PQuSO0w7CKVPQcu1Utpn6JIhfWQpazZoC
nk/CZeZGk5D9mHZa/uMUzOrWHvx0eRIYvA/kPR+YAqPPKJPbZRJqearUBEen
4Lns2cmbeJ+P9JLcnkuegqa72pxCnpPQsav2Zf/iFJDfDO+yfDAJb3KGw7t2
TUO2v5ucdOokzA6EbqHVnIbup0Mh1mmTUDp1nEFNdxq2+s0MBWZMgsGli5qB
xtPwl2UDGl9NQo7TaNlh62m4c16QpFM8CV//OcYf8piGX19yKjN/TsLHK9Lx
8a+n4fZrxfqMxkl4Vh3rk5I/DTzKRVvSmifh5RTKz/swDXRZTEJRHZNgozpz
ZqNqGlgrpnhODE2CrWav77HBach8oemhvzIJ9WOXOi8LzUD+wSfPdq5PQkVz
sfB+8Rn4fUpHtZmGDHr95adn5GbAIZHoNGMiw/6Tog0fSDNwwDZvWIGNDOkG
4aPjF2agQ8r3qN9+MkQXvi3fmjUDs3oP3vJLkEEy09I0/80M+J06+/GjFBl+
eMjOORbPwAtn6/QxeTJI3I36sl41A/EaqxRZVTJo/HfHb3RsBvwVvl81OEmG
qBnj1HeKs8BIt2b31YwMfO6jTiYas6CZ6c2ufIoM9eTlgA29Wbg19TRX0JoM
SY77KXE2s9CwlDLVZE+G/6IF+/0DZ4Fpi/aLn7fIMNWm8CiibRYSnzaHiafg
64p/M2fC5kDjz0LZ4af4nOVXWLicMAdWL1ikjqWRocVW/yR7+hw859pZfTqT
DJMtp+54/DcH9uXOe5xzyaDfVl62MTgHP9f5H6iWksFvnJbFTHseViLeKsp+
JsO2zE87XUzmYepwuZpgBRm4WO53JZydh9b7vKarX8igrn9OUMhjHhQTHr3J
/EEGO++MzF0v56FROMEto4MMJvsfbTiwLEDj01Mcvl1kiNXmdnyxZwFOR0yK
mvWQgU5TcmR+/wIk/94ZttxHhoBskSe/tRYg8+OvGJURMkR0hYne9V6AS7qi
yH2ODDHB3ukPxhagpa29oIKVAmtJIvvZuxdhg+0nVwQ7BcwLh0nKk4vwNqiy
0ZIDn/NCP5j5ri0CLdv0sX/cFDB+9K7PUGgJvkvdvjgjQAHF4Fk1iStL0Gf3
BTfdFHj+hV9vcQm7X5/vpiwFrgp9825gWQaxCaYhEXkKLKuLVSDBZRguoEP3
D1HA4N4A6/LxZTj2rqB2vwoFOO+Mf6qMXwYizfCalB6OH99f16y4AifY1ZSr
9CngOJvBfcdgBcJYlcPOG1Ig+yI7aNmuwNWZng9hJyhwaObyJ8nQFXjje8Tr
lwUFPDekYt16V8Bq0imb5yIFeopf8YxErsKBQzo7nt2mQKNIrVYu8zrsWXoX
NeVNAX3zWPlvAuvwtC51VMeXAlkXrLeuKa2DqR2D5OhdCnyRa9v602Ed2qz/
rAsFUGChVUl3sHIdXjBG/Tz3iAIWn+8f4Q7dgBMMYcbPI/HzWN7wHszYgPqt
OcV/oyiwq52NdK10A3Iq+bUuxlJgpdV5RJe8AcbK6o7mjyngUfyI1kCSBsVm
xeXSp1Mgx5ZBoSmBBk329fArZVCgYSXW70YmDXr8hDvEEZ+bCdm+d6L5NIjz
55xm5QsK9K96b6moo0HvnxrfuPmaAjVXlNd+0tOiqKInD9ILKcCwv6bg8m1a
lGTYba/1jQIsQXotYq50aCfJXd2ligIZYqXFgX50qMKUTBNXTYGDcpcHl6Pp
0JTzR90/3ykQzmCdpVBEh9zpto4743N4C5Mbe90yHbKVlnI3aaPAXuse07Io
evRKRNr8cjsFbJ69//wugx7Zd2+VuddBgT7HXzdLi+mRA+lo06suClQFJ2uL
dtOjtIbDFOofCjQV2u45LMGApl3vmFiMUMBHlfumXy0D8uYykLcZxfkQVLfb
18eAFDLX99iP4T7FJxNGZxjQcGjVFtcJCvxs4bGu2suIDjbucr1NUIAiGkbt
vMmIDGNVeS4sUOBd8Fp9jAgTWj/ya5s/EwG39WNVSE+YUSLDsvVlZgJuDtZz
GhYwoy3xEa1GW/A5fqvpoucPZvTn6LwJxzYCdg9VuEktM6N9DIrXU3dsmuQr
eH4L6qS1WQ/gIOBNWpGwnsRWZHXJy/YcJwG9tiHijse2ouDRsTlFLgIcmUPK
X57fivQel9cPchPAMc6uEh23FdVVySkd5SNgpGdIcMv6VtTD3vngszABMreX
TD50b0OJr9vfhokQMBQ9bMS+uA2FCHvwnhYlAF59fRTHsR09tVFFk2IEmFg5
RdGbbEeE9RYDNnECPNumQt9+3Y5Orx0fPiJLwAGejM/aRSyoccvK7w1lAkqO
XyuuL9yJGD8bnM9VIWBmy75X5KadSOtgqdkpVQLyirI0D03tRLITS4HZuA8q
MzLdJS+/C51Oe8+nQyLAVY/v4+z7XSgy9WqQA+57/jvV3HLFhhW1xSvxMB3H
+QnxWJO9xopS+9uEXmE/G6sx33aPFb2/5xc3okuA4MGozrU0VvT1iAODvQEB
WZK367oGWdFVOBmmboK/j7V74v432BC1qTejDZsS6vU6IZANrSrGHnY7ifuM
btVvFYlsiOu7TFuaKQFRT6r3nSplQ28bY5cXzAkIIXEqhjCwoxcOl5XjzhCQ
7GaSxf+MHYHWRIjzRQKWkk42oL7dqNbCK2QdW7MzWfre/G5E929oOc6OgFvX
DqWf3sGBzJI8dErtCVDIVTtpp8qBFjivO9E5EnDl96mIzmQOFEcwXfJxJqCx
ctuQhzUnYgp9OcnoQgDvSXId201OdLV1x0ws9se7AYsN4ZzoIP8+75yrBOSW
+ua/+syJhP0/uje6EhCuEZncJsyFWKrMghhvEiAuhHIMp7kQ0NDuDsdON/nJ
T2HhRtqm5H07cd94Z5xeougANxKZMuzi8CSg6d1EVuZ5bjQtmhXG70VAokqO
HV8dN3LeKHDk9MXxfCddHr/lQb01Zpz5Dwg4/sxNrCGcF6UE6yoKBOD8V99g
+vuKF9VMK89EYNffu5qxu4oXMdheNb8ciPtO5/Tovxu8KE1453OuYNwHdrkd
5LzNh0ozOD45huLPr9zEufUaPzpqHrdej/2ZOdJaL4IfxSuJjymFEeCTw5Hy
OpcfZZp35jGEE1DnPJTdNcaPwpgmGNIi8O8lXo1lxnkv+tpZLoiicL5Kxs4I
3BBA3nEnu0Wicf0LRMrkxQmglJx6zWDsddfrDg7FAgi1l24ziMF98p2n8TqL
AijLyS/zZywBaHnepOOBIHpE3hD+loC/v0pXhaMmQmh06OVprxQCbNUTq7W8
hdGw7Q6hemya0aLfShHC6L89es9FUwn4wbevVSNNGD37IIsasf0oyVPR34SR
3qP8ODHcp4+UFczKs4sgc5q+fPScgLnjIoH+BSJoNuzdLDvu061yvlvVV4mg
kC9S0w7Y159NuMl3iSDLawf4tmQQcDQk5pMyvSiK7MqQMsJ9/B7uWAGb06Io
WlHW99sLXF/GNyImacSQrVmxJ/tL3Md79Px8xSWGOlbipS9iFy14FvlKY786
9nsZ+7dsdN0VKzGU4h/PKvOKgO6gHW/sCsRQZMOvC8GvCdAwy/QfvbIPzXkt
9TLlEbBKNRcdG9mPGHJzes2xX1tYMA7RHUD24gOP07BlzeePre89gCq5lg4r
vSdAOnb4TOypA2hs9qfihXxcDxfTHZUqD6D/WpZtswsJ4JRrqovNFkfPP7tw
UrBp2XfVxFaKo+9HbMOUigh4wGMlW/RXHHmqVudWYhMKed/P8kmg/+wMu3qK
CaiYoBvVjJNAmtVjQvQfCJD0mN32MEQSGQqs1ulilwXf+vfupSSyo5odDceO
bnKwXvwmiao98y1ZP+L1d49FwiK9FGq1CX295xMBj7cdNM4NlELHDNxHhMoI
aCg1iZsOk0ZJmn0keiCg/fhHBr4iWSTY5H5HFXvkcq1+YqssUuE4G+KB7Zhg
9kxhXhb9me/eNoi9TWZuoU1ZDrnulWsBREBtlMryj69yKD1WOtj9K87HEeHu
Uld5xFCb/eMlNuvpTP7k+/JoMWzr3y5syRKFyYex8qiSUTxQp5KAzmdPvZ+X
yKPLUntfcX4j4ByiFcxfl0fb7vOGvq8iIM2wPfJywkGk4hq01o/NOj+d7fnq
IDrBeVyPo5qA0Uqhi49LD6LsGDsrb+xAg5FFjv6DyJRO+JZGDQGVMuaFNHIK
SDVA4NPX7wRw2Xf1ZTQoILkb6MrbOgJiXA5lhu9VRKYKD7x7sW9RE3lplRRR
KZ2mzc6fBNxXGzaPNVZEGUcdktywLZYXHTbuKCLR5VmKXD0Bdiy1FRw9iihB
cp9mTgMBY8Q/BpUMJWSvkxPUhq0vz89pVaqEhpl/PGNoxPGJ656xLUooWiDE
5CL24+T6kNNMh9EPVas8zl8ExLceq5N2PYy+3JcN924iQLR/OFlI8wgqvGQk
9QJ7mZfr68bZI2iSdD+rEfvc4ayelVtHUIJs1Z79zQQkMO80M3p7BB2QmhFu
wtbbs1PSkPcoCkh990WwlYCrwoq3+laOopXDChrpbbje2ONOSbWpoAHLP6eq
sTniz5iZzKogPg5f/Unsof6suBh2VcThRltzpJ2AnNxBM4+TqmhC/JdYPbbG
xvdfxbWqaJjCdn+qA693HhQ/zRo1NG/yxIOzkwCq3wzVYUQN5XAw6yljaycX
X8tlVkcoaVeEP3ZRs9tcsr460m0UidjRRcB4ksVd5p/qyJfsHCzcTcD3vrD9
Op0aaPTxJa9j2CKfy+dDVjQQzzEBfUfs7Hjq68m9JOSabBCVg/3Px11B+BIJ
aYgk5cj0EDCwIiukQJCQh9d7GYVevB/T9UsyP9REpUuvlPf1EUB2zu2qKtJC
A3l33LWwy5vbzYeqtJDnJ47o89i+YZ3vdndooXMLY4GJ2NtE6rRermqhB8aX
TBj+EmDEbWadqKuN5EjO3r3Yzm8yhEt6tdGDKwtv/AZwft8r5Vjs0UHsIp50
ydgBam6rOTI66GWo7LEC7LsC/ASrtg5i3fIqcBCbhiZwjOeqDprcnUenN0jA
FlfL79sq8P2JvFu3DRHwKsp9KeDKcRRhfKPYf5iAgmS7MzI/dJHR1Q8Xn2D/
zpU7+7dfF60IM8wXYPs3tXm9WdZFsr+ZegawzUsYT4RL66HzrvTJx/4R8P4S
Y+q1WD1E6pIYoBnB9XUt1er3BX1EelAizoNNx+V3YbevPkruTLCWwzY+eLHS
JUEf1eo89z2PzV5cMOv4Qx9N+Oz+/BF7501T7RhFA+RohE5cHSXAbWSiq3qX
Icrc26r9AFtG7JvPCylDxNF7SzQJ+1tMU9VTPUNUdvT9q6/YZrJXy3rvG6Ke
PdsqeMYIGCx56Z01ZYgiqG8VvmA7j9Lom3UZoecS4aX0E/h5K3bXm9AJVL9e
tciJfW15xoDnzwm0d2jfAXHsH0y3fnmvnECli6GnjLGPc5ZIPDxsgvgv2szE
Yw/VPRPsfmeCjnHQnxCaxOu/Ou8v94yTaHpH1E8ZMgESF78+dW0wRUb+ghIa
2PnvQxwr/piisrLbt02wkR5FdS9hit4tvhu7js0UJKTCyGqG4gXC9r3HTp14
lnzf3AzVT8czylDw/mVE93t/lxkKL3v9SYDA61npWfnQWXP0kWTPL4Ot7LSy
3YLJAp1Q77ipim3mYZ8rzWOByi/vXzmDzcRxzopFzQKZ/nL1jcG+0cCb7Bdk
gcT4nqttbMZLLCk4wnMKfezz5myl4v0zu7jmuJElonp40fdja+TLy6zZWiIP
cbd/ZOzD1lXZ325aovu+tyOYpwh46tNNG5RiicifR81VsCXK3MKrxi1R7Sub
vmfY5Iz/Is9HnUZOyedkzk8TEPeo7pfcwBlU0rPrhzP2gf/4NbuXzqDeD7zW
Xtj2x/fopbJZoXRd+9PR2B2U+DPWWlZoSGyoGmGn/ekSa8ywQoezyaHCMwSk
yNqk5V22Rkfq5zq6sH88CT+UQ2ODulW+7v6HzTS+yMzAZ4MiH0nrTGFn3dt1
0UvJBmmr0IYwz+L15z61K83FBkXYl0QdwubzCS6jabNBUhYPPodhv75drMNV
cA7VHs79ITuH96/iVskVb1vk6zEpcBR79M7D3ycTbJGypvA1LWyqJ/Pgp/e2
yMDEj2KBPen2/XzDP1v0y7gm3htbmFP7zLLlBSREDbuMsJ3+yBor8V9EZ1oM
bQzn8fln4GUnM7MdopYPlpljc6luY+TiskMqptqcNtiH/f5Uye2zQ7ZWzoVX
sXlDdPaFHLNDs1osSY+wa+sbJcDfDo26rO+sxzY5sV7ntGaHiloNB/UXCFAj
y+g0btijPp+6rWbYdz/ci6pku4Rou9+KW2P3RxvHV4teQq9P5J10xr7OrDa7
qHcJyY3eOBaGXWVnIcUaewkRDFzfa7AZv1E12PY7IJcAs1ukRQLuuX+Le2nj
iBLtVUt0se+qmnQFuTmiK1nnKSewOy5Oi3kGOqKYZw7G57BLLtFQAt44ItJD
6Y/e2Ewlz33sVx3R3gy2U/nYHsfYehQyLqO0r+41vEsEsCi6cTouXEEBWXz1
Qtj2/V+mh7Y7oZvcQfX7sU96t897CDkhTo70CgVs+WaeZDBwQhO0QfaG2P5R
D7R2PnNCNF8nir2xjz9wNo/VdUYN/NTMJuxeZ89L7i9d0OXukS3t2On/0WmM
lLmgJ9niLj3Y1oqrrtebXVBKe6LACPYGl9Tcuw0XNMUSe3IVm/zQoHD67FWk
5xL3e98yXi+EioJSOa6h6b96kbeWN/urixfyE1yRk0KnkS+2e/fi4x9vXRER
fJbpPvbZA84lM99c0TFeVbdQbBrft/W+c65oX1Yrayr2Xqe8u5ZnrqOZCYfH
gF08JeVyXMANpdJqfWVcwefXjJbQ3HPu6E3qGcZt2NM+vaKNzu5odrpGZyf2
x8GeplUvd+R6+utHLmzJD6Q7HrHuSO67560D2AcUc+Ibqt1RgJOfjj52dfOA
veahG+i67w6Th9iHadXkjuy+iexPct6KwK4yLBQBkZtIbEYrORqbXnA8zFzh
Jqqf525Jwvber96YanYT6V7i5cvBRkk+Cx9jbqKFkrCFGmwSMHWKsnkgT72p
JYZVvB4BsiXzeiLNqzpvt2DjbevKlJQn4gFxGxbsZsV7NbTqnsi5uCBvN/Yi
R22O3gVPRLbdKyOCfa0zD5xeeCIaV65wjc3xW12LmQ7eQsvhjZ2e2Lx1NNz/
LLyQ8fEDk7ex1+gkJI47eqGWC79XfLEf2efWvffyQqMU9d0PsGs/d3S9euKF
zib5i0Ri62ucbhb964Wor6u/vcAOnpgpMHW7jZIUqg40Y4cfchJ489gbJQ+r
jrViHzyRmxz62hsFcJzMad+8fkL3xs3P3uiptIVgLzZN09qZqwPe6ELj9qkR
7EIGgZJpWR+Uco5x3xp2Onti0PlaH3QgdLpn3xr+PVteLW3edgclPy8OF8cW
Aec/G0J30IWsaSUp7OmzUw/VjtxBrv0TQfLYvCu00UOX7iDpNg5GVezs098d
qeV3UOpV3ZiT2DZ5wcwbnncRXPnX74X904/b8whxDzkpxRzzwT4uHfThMrMf
yr6ylnkHm19re1a2oB8SvCBp448t6fclycrUDz2lbikIw54f4V0PLvRDLtMv
ZlOxCd21tZ2+95HMhTNjFdhGSWnGOyP8kfg+vzW0OZ8Po7yrSf7olmLprkrs
FYO2wOkX/ugKyUe2BjuYSe3oUoU/uiigY9mIPVe8/u76jD/64BNj0IfNOrN7
fO38A6RPU9+xhi0+EEI0KAcgkaHxwg1s71uaap16Acgk0SKCdp2A/aImnyct
A1BV7vYjjNhqdevOcjcDkPkFbV8WbGt2C0axNwHo+H7RAl5sse/K0Q0Cgajn
lsKEEvbAWuCs0Y4g9KBR/9YR7Fe/QdKfLwilCbGsH8UWnlshf5YIQsuH07ar
YYckyUib6gYh+95d3NrYGoydq733g1CtrCj1BLYC3f3nKbNBqF7odaED9j7H
+PKSoWBUtOrPcRn7rX9+Lf1sMDJxE791BZtNLpJ8lj4EGcmNK7hgX6RlDhET
CUEjDy3T3bAXxAbu7rsYgj7Kvj3mix3On2070BuC2E4cLIrCviscJnnl70NU
8yVzewx2RRTjA53ph4hjttk+Frt0I0tWhiEUjWp47kjA9t+amS0kHoo+Ubos
nmAfYk1/F+MeitaUlbOzsDXHdpBS6MPQjStMzh+wy+U/id5TCEfM/vdTP2KP
v/3X+et4ODJBXT8/YadS3bPlrcORQ7+q9Gfss10CqRz+4SgztqoXYQ/qL6Vd
bwhH9/51sdRiUxLlfNxdI5CN+HpGN3ab4MOj7cWP0K4fKek92POcelanvz9C
NnnWab3Y0hWx7/92P0LehlpJfdjRuwr2cNNHouMVP/0GN/N5fej6dvNIJCHk
u29iMz90jz9xTUeikQHltiXsIdc7nL0q0YjrZ2jpMnavPdml/mQ0oh9gTVvB
DlKpyvzhgK/rN9qvYf8ZKGgcjopG575zD9Js4H6I4e5/7wajkdD2a8CMbaf3
+zjSi0G7TV5NcGB/OkhKl16MQVoxNsWc2PN7p0rk6GPRjdsOd7mwqy84tx/d
GYtC73lt48E2XuHVPy8Wi4wN3wjwYZcZkKUI01hUdOH3AWHsU8+f2ii/iUXw
cB1JY3NJOt7zdYhDPlnWt2Swl+xVTXTc41BmJa+ELHa+hnsAx904lCPQFCWH
/a1VQuh7fBxiDea3UMDOpEu5f7cyDkm2psGRjc3/Wbw+zi8WjzJ1v0hpb8aP
fNtvNB6PJK7Hdm96JfU8//JCPCpEFeHHsNWlSvTyGRPQfa1DIzrYQ5Ua/orC
Cch+Z0KyHnaNfejfp1YJSHCupNcY2/9ZeTb1ewJSt3WaO419aKLtT8X7RDRW
uxB7BpsIsw69WZGInI7My1hhj+02eypbn4gSxbUdrLGTSfocaDwRXVoTq7XB
XjtTma+//zH6ei3szsXN+P4Xts2mPUZ/8429nbH79QsYGx8noT3uTsubTua5
IRf2Mgnple6+64Kdo8DDb1SchFY8eP2ubuY7e9DwX1MSQltn7rpif8xTsPHd
kYxouMUu38A++spAnj8kGWW37xrzxt7/+MJB23tPkAlHy3kfbM1FQpY78gmi
OBxs3vQfkbKzHU+foII09MkXW/vLQWOPz0+QxqRC0N3N+CerZrevPkEHygqY
/LH1CrIu191NQXNJF76FbM7nOtJJDUpFA8Xmyg+xE/4bKj2VlIq8aX6/2/Sy
cDTBk5uKwtpCE0M37xc78+pLYyqqN/p0IRz7ptfWvgS+p4jTM6UvcnP+OXy/
dEueIlLTwZiEzfqdL1NapT5DEkO/FzY9VDioxs2Yhq6scl5IxI4llF6q70lD
+hVXpR9jR1YmvnurlYZOr93+moTt5HRIjiM+Db0Zc+xJwRY7ZRax4+hzdL5i
Xj11s94TWzn7jZ+jd54SzzfN3+Zvieyeo3XqrYtPN+u/8vKWzIjnSJS25M8z
7Ipv7q3Tfc/RVLmtetpmfgpCUsXmniNFiXepm06UVhY+yJiO9l1VPvMcOzDZ
MtOfNx3RT90u3nRN1jnLg/vS0afAc2zp2D87dtGPyqUjFt8R100PXGp990Il
HV2X3FO7aX2WN1ZXjqej/wGnVrCa
         "]]}, Annotation[#, "Charting`Private`Tag$119656#1"]& ]}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["z", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"\[Omega]\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Latin Modern Mono", 10, 
       GrayLevel[0]}, Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {-1, 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=0\"", "\"\[Beta]=0.01\"", "\"\[Beta]=0.05\"", 
       "\"\[Beta]=0.1\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Latin Modern Mono", FontSize -> 10, 
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Latin Modern Mono\""}], 
                 ",", "10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.732814527141393*^9, 3.732814624484332*^9, 3.732814667542684*^9, {
   3.7328148232537527`*^9, 3.7328148496311607`*^9}, 3.7328149308490887`*^9, 
   3.732814988709996*^9, {3.732815020259302*^9, 3.7328150625215216`*^9}, 
   3.732815449107796*^9, {3.732815949447561*^9, 3.732815979062414*^9}, {
   3.732816038265669*^9, 3.7328160526950693`*^9}, 3.7328160849890814`*^9, {
   3.7328161644534817`*^9, 3.7328161856960735`*^9}, 3.7328607047582836`*^9, {
   3.732861469986761*^9, 3.7328614891362357`*^9}, {3.732861667699328*^9, 
   3.732861700091168*^9}, 3.738228151587889*^9, 3.738228186058467*^9, {
   3.7382418280145783`*^9, 3.7382418606225386`*^9}, 3.7382419059615417`*^9, 
   3.738242048381505*^9, {3.7382425325668936`*^9, 3.7382425908702555`*^9}, {
   3.73824284388124*^9, 3.738242863025199*^9}, {3.7382429022621*^9, 
   3.738242920944433*^9}, 3.738242965256154*^9, 3.7382430097257614`*^9, {
   3.7382431533255596`*^9, 3.738243174294364*^9}, {3.7382432774756546`*^9, 
   3.7382433408076925`*^9}, {3.738243471075276*^9, 3.7382435094912663`*^9}, 
   3.738243546323291*^9, {3.7382505592579107`*^9, 3.738250577765907*^9}, {
   3.7382506217018957`*^9, 3.7382506375738606`*^9}, {3.7382565420342903`*^9, 
   3.738256563654312*^9}, {3.7382978068852396`*^9, 3.738297828705921*^9}, {
   3.7383003215237036`*^9, 3.7383003486687636`*^9}, 3.738340809741262*^9, 
   3.738343222638985*^9, 3.7383435224725423`*^9, 3.7383871558174257`*^9, 
   3.738409620187368*^9},ExpressionUUID->"3f6709b2-77be-4811-b8ec-\
48bad26b34a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"y", "[", "t", "]"}], "2"]}], "}"}], "/.", "S1"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"y", "[", "t", "]"}], "2"]}], "}"}], "/.", "S2"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"y", "[", "t", "]"}], "2"]}], "}"}], "/.", "S3"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"y", "[", "t", "]"}], "2"]}], "}"}], "/.", "S4"}]}], "}"}],
      "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Beta]=0\>\"", ",", "\"\<\[Beta]=0.01\>\"", ",", 
      "\"\<\[Beta]=0.05\>\"", ",", "\"\<\[Beta]=0.1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "z", "]"}], ",", 
      RowBox[{
      "HoldForm", "[", "\"\<\[CapitalOmega]\[CapitalLambda]\>\"", "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Mono\>\""}], ",", 
      "10", ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Green", ",", "Red", ",", "Yellow"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7383407832240496`*^9, 3.7383408023490186`*^9}, {
   3.7383408393494425`*^9, 3.7383408665352755`*^9}, {3.738343213459252*^9, 
   3.738343255767826*^9}, 
   3.738343569116044*^9},ExpressionUUID->"e6289c80-a31a-47cb-aa76-\
a19ff21ad69c"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"4.999897959183674`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,44,17,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.73834085058663*^9, 3.7383408676103325`*^9}, {
   3.7383432178582993`*^9, 3.7383432568095837`*^9}, 3.73834352254733*^9, 
   3.738343570029391*^9, 3.738387155913426*^9, 
   3.7384096202953725`*^9},ExpressionUUID->"f4b9d828-6213-49f7-b7de-\
a3b8c329ea02"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"4.999897959183674`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,44,18,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.73834085058663*^9, 3.7383408676103325`*^9}, {
   3.7383432178582993`*^9, 3.7383432568095837`*^9}, 3.73834352254733*^9, 
   3.738343570029391*^9, 3.738387155913426*^9, 
   3.738409620315346*^9},ExpressionUUID->"7ad4de38-e671-442b-8e66-\
415cbc82a5fa"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"4.999897959183674`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,44,19,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.73834085058663*^9, 3.7383408676103325`*^9}, {
   3.7383432178582993`*^9, 3.7383432568095837`*^9}, 3.73834352254733*^9, 
   3.738343570029391*^9, 3.738387155913426*^9, 
   3.7384096203273497`*^9},ExpressionUUID->"afaf2602-fbc0-4322-b4a3-\
50ed90cb4d9b"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,44,20,32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.73834085058663*^9, 3.7383408676103325`*^9}, {
   3.7383432178582993`*^9, 3.7383432568095837`*^9}, 3.73834352254733*^9, 
   3.738343570029391*^9, 3.738387155913426*^9, 
   3.7384096203433695`*^9},ExpressionUUID->"2fb548c8-7bb5-4260-9e7c-\
4c1ea6620cc0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
ijon1E/D/wBaQ83a
         "]]}, Annotation[#, "Charting`Private`Tag$119731#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
5oUZISckkZjA41F3xP+/WjfFnO6/n0b/A2CTbSU=
         "]]}, Annotation[#, "Charting`Private`Tag$119731#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, Annotation[#, "Charting`Private`Tag$119731#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, Annotation[#, "Charting`Private`Tag$119731#1"]& ]}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["z", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"\[CapitalOmega]\[CapitalLambda]\"", HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Latin Modern Mono", 10, 
       GrayLevel[0]}, Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{0, 2}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=0\"", "\"\[Beta]=0.01\"", "\"\[Beta]=0.05\"", 
       "\"\[Beta]=0.1\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Latin Modern Mono", FontSize -> 10, 
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Latin Modern Mono\""}], 
                 ",", "10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7383408061556187`*^9, 3.7383408099706483`*^9}, {
   3.7383408402576866`*^9, 3.738340867756942*^9}, {3.7383432180274396`*^9, 
   3.7383432569367294`*^9}, 3.7383435226650567`*^9, 3.7383435702069035`*^9, 
   3.7383871560494537`*^9, 
   3.7384096204353743`*^9},ExpressionUUID->"08498efe-98e4-4f26-84e8-\
bd16f355d6cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"y", "[", "\[Tau]", "]"}], "2"], "/.", "S1"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"y", "[", "\[Tau]", "]"}], "2"], "/.", "S2"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"y", "[", "\[Tau]", "]"}], "2"], "/.", "S3"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"y", "[", "\[Tau]", "]"}], "2"], "/.", "S4"}]}], "}"}], 
     "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Beta]=0\>\"", ",", "\"\<\[Beta]=0.01\>\"", ",", 
      "\"\<\[Beta]=0.05\>\"", ",", "\"\<\[Beta]=0.1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "\[Tau]", "]"}], ",", 
      RowBox[{
      "HoldForm", "[", "\"\<\!\(\*SuperscriptBox[\(y\), \(2\)]\)\>\"", 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Mono\>\""}], ",", 
      "10", ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7282245510172353`*^9, 3.7282245548145046`*^9}, {
   3.72822485724882*^9, 3.7282248651871786`*^9}, 3.7328140005730658`*^9, 
   3.7328145972752876`*^9, {3.732814662640927*^9, 3.732814664696971*^9}, {
   3.7382432185241804`*^9, 
   3.738243218742006*^9}},ExpressionUUID->"03fe0951-4f2c-424d-86ff-\
03e9fa06071d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0nk4lAsbBvAZ20gkIokWRZZSThKlzv2WDpItUbRKRwmR6lDKUqGkcJCS
rWgXiRaE6QitZKkosmQds7zv2Gas8833x3M91++f+3qu57q1PPydPCVoNNp3
8fx/7w1d8VUkIpnHKzTSVoQWoW3QavbQCMkcdw4nlROL4H7kkG0vm2RauQX+
MeNhETwdb1V+biKZrVfU7uk0FMFvieyLlKckM9qg3WqRbjHOV3ddNz5AMrPH
5/ss+FqM+7NSdx0p5zGzat87X1z/GlTGjJbac1ymae0aydb15dBo4uaxArjM
mFlMntbOclgqNlyQOsJlvlhdsjQkoBxpYbcM1m/nMpmN3oknH5bDyn158D0d
LjNP/kXOQTUmMrTs1M/VcphHGzY1bBtjwu5u/C79xRzmHJcKl7reN3j8SO3r
xbcDTPc76THrf1VgY3i7np9ZPzPz2LuZKYx38Gu6PHNhSQ/TOrlHY827T6ia
d6ijULqLKaO9u6q8qQ4jOoLZYWEdzGg/5NlTjbix/vQR96gWpmhntH9XehPC
DKre2+l+Z7qcDml7d6YF6gWRnfe065kJCov7aWvaIdJwLEv0eccczNC+qpbV
iQMyQluPayVMeVH8meGzXcg97L9u2YNbzMZDOvdOmfTgieSJjfiWi3lnlpiy
yF5YM0WjeVH/wW2Nx4HkQ/2Y6dLuEnj8MxZFFSSWVbGw4lRaeWJiI1R3906W
kgMYdlUIjHvQiOULLtQWDw2gdGOoYczrRrgvdlZ+LhjANoZ72oWuRhzvdhu6
LRqA962lwQHGX2HQH75qryIbj948NnFo/Irw2EXr3VaysUyh+IncnO/4nG2q
eNKbjcX3v906n9CMmmsORc4tbCRLvliy8mEzPjmO+ky1saFwMOnxz7Jm7FFP
3Z/9m41xjR0lxqxmJLe+k+5jsfHt37ofPfiBTTYWoXZCNq6EfJpnw/0Bt4LQ
VTdVOBh2/i9Z2boFT3smww23cfBeMjche+oXGkSPXt3J56AjIc+/TakNHA1C
NaCQA6FWvq36sjY87CV2/vmSAz2iUCbOvg3HTitfanjNwaVzxcHBmW1gNnRV
dFZzYDlS5bF9Uzsa5iWkprVy4HHSPyVscwcYp1h5MTJctP99+ahhVCcS5682
i3PmosKLIJb+24mPbvQvSru4uO8rnKue1gmdPfpEghsXvqe8KqUKOrHd1e3V
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
xCByHEZK9KuE+B+mjMXO
          "]]}, Annotation[#, "Charting`Private`Tag$119829#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
cslxgYBO8GuyWh4zePgfgTbYkQ==
          "]]}, Annotation[#, "Charting`Private`Tag$119829#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0nk0lG0fB/CxZBCiZIkWpUhp0UvUo+9dSpJsEV5hIluPlJLkIUuh7YmQ
EumJEiqk1ToiqSdlLaTsyjIz9z2iGQbzzvvHda7zOed3rvO7vuer5XnM3luc
RqN9EZ3/3wfPrm0VCkmm9JDOCVONEnSN7Vb8NUEybe83TdhvKAHD18vqxyjJ
jLC95hi6qwTetrfe1LeRTDW7mvqxYyUIXC79PK2QZD6ILUx6UFuC6Lf91zd5
iOY180zUgkuRo5Du5FvJYfI8ZwPsvpeBypTp/BTOZi75PLhD2FcJjTZ2wXAQ
m1m+5ueWoNlKmM9rjpH0ZTNvbnTfz1dnIiPylt4WOzazI2+rgrkdE7sZa8Lu
r2QzeYur63qqmMjU2qce/onF1K9xU1Gwr8K+e4lOq5exmOtlHo+Emr5Gfp5q
67maEeY3zle5hUY1MI3q1g00HmLyX76t2OBVh8C2C3OXlA4yXd7ryFmuqEet
mlfP0zn9TF2GSvJlySZMrOQpRkb2MJvVjJa5LmrFjS2hvoy4TqbcipN0g5o2
ROrVvtun84Vpyvh6u+NmJ9SLY3vvazcxmzuiRoysuiHUsK1I/rOO+cW139kg
vxceUnwrz79LmXX3xW+6RPXjsc8xk1UPbjFdnrC/hhsN4pHECVN8fgyZF+41
DewfsGAKfxfEvQb/d6axnscQ5jp2O4Ycr4dXTI5ZOHMYa4MzKpOTW1CXPrzR
cWgE487yIQkPWiB7zbTVmjWCctOz+pfLWkD+PEHtokawl87IiOlvgW7I2rS1
/BEcubUiLGhTK2rENZid9FHkVeUb2rS04lluhlj1qlGski95JLvgCwbG/Yuf
eo5iWc7nW9FJ7UgSmxvo0jKKVInny9fltuOr5oErtLZRyB9Kyf9a0Y7FG5up
e19HMaWxv3TTcDvOe+lcG+wdxedrjR2D6IAzn2ZnTo3iUsQHNUt2B+S0rLvi
5FgYd3idOt+iE3Z9BwflzFh4J/E4KXvmOxyNs94H57LQk1RwrEupC8Gzalo7
H7LA1yqyUl/VhVzJeIZSAQu6xFOpBOsuBK2pSb//lIX48JKwsDtd0Bb0LH9e
yYL5RK2n3fZu9AnX+Aa1suB58lha5I4elOlWnfaZZaH78AV//bheJAp8rKKt
2Kj2I4gV13rhsO/7iKQNGzkBfBX1jF4c3HPYN86OjYBgvzeSxb1w5TnTzh1g
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
QiGd0F7BSTqXx8f/AExByjQ=
          "]]}, Annotation[#, "Charting`Private`Tag$119829#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VclRPp9O9JX0pcwTzIX/AX5w0us=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$119829#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.09567526637307266}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\[Tau]", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"\\!\\(\\*SuperscriptBox[\\(y\\), \\(2\\)]\\)\"", HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0.09567526637307266}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Latin Modern Mono", 10, 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=0\"", "\"\[Beta]=0.01\"", "\"\[Beta]=0.05\"", 
       "\"\[Beta]=0.1\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Latin Modern Mono", FontSize -> 10, 
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Latin Modern Mono\""}], 
                 ",", "10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7282245556270876`*^9, 3.7282248659840918`*^9, 3.732711457493662*^9, 
   3.732711883374622*^9, {3.732713256096566*^9, 3.7327132860644393`*^9}, 
   3.732715253216319*^9, 3.7327176157607403`*^9, 3.7327719803045588`*^9, {
   3.732772010545852*^9, 3.732772034207594*^9}, {3.7328105377117233`*^9, 
   3.7328105529782867`*^9}, 3.7328109089178486`*^9, 3.7328118916728916`*^9, 
   3.732811928172135*^9, {3.732811974213721*^9, 3.732811992284629*^9}, 
   3.732812773213972*^9, 3.7328128987667265`*^9, {3.7328132889866905`*^9, 
   3.7328133077541003`*^9}, 3.7328135847191677`*^9, {3.7328137789164686`*^9, 
   3.73281379071684*^9}, 3.7328140027403975`*^9, {3.7328145977289085`*^9, 
   3.7328146245856357`*^9}, 3.7328146676574907`*^9, 3.7328148497308846`*^9, 
   3.73286070487167*^9, 3.7382281517005587`*^9, 3.7382281861851287`*^9, 
   3.738241829210578*^9, {3.738242532773822*^9, 3.7382425624361672`*^9}, 
   3.738242921141746*^9, 3.738242965529397*^9, 3.7382432191961164`*^9, 
   3.738243277581835*^9, 3.7382433289219136`*^9, 3.738243471259307*^9, 
   3.73824350961127*^9, 3.7382505593659124`*^9, 3.7382506218138957`*^9, 
   3.738300321634986*^9, 3.738340810113268*^9, 3.7383432229681034`*^9, 
   3.7383435227863646`*^9, 3.738387156169422*^9, 
   3.738409620563345*^9},ExpressionUUID->"d461b32f-665a-4915-ae16-\
d403568bc498"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"x", "[", "t", "]"}], "2"]}], "}"}], "/.", "S1"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"x", "[", "t", "]"}], "2"]}], "}"}], "/.", "S2"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"x", "[", "t", "]"}], "2"]}], "}"}], "/.", "S3"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"x", "[", "t", "]"}], "2"]}], "}"}], "/.", "S4"}]}], "}"}],
      "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Beta]=0\>\"", ",", "\"\<\[Beta]=0.01\>\"", ",", 
      "\"\<\[Beta]=0.05\>\"", ",", "\"\<\[Beta]=0.1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "z", "]"}], ",", 
      RowBox[{"HoldForm", "[", "\"\<\[CapitalOmega]m\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Mono\>\""}], ",", 
      "10", ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Green", ",", "Red", ",", "Yellow"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7382281258526144`*^9, 3.7382281673817816`*^9}, {
   3.7382282332123613`*^9, 3.738228343569372*^9}, 
   3.738343867155785*^9},ExpressionUUID->"7cc477aa-33cb-49f4-a315-\
8fa95c3ba535"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999775510204081`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,46,21,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.738242921201745*^9, 3.738242965574213*^9, 
  3.7382432776380067`*^9, 3.7382433289904547`*^9, 3.7382434713192763`*^9, 
  3.738243509667266*^9, 3.738250559429881*^9, 3.738250621885891*^9, 
  3.738300321696171*^9, 3.7383408102858305`*^9, 3.7383432230180073`*^9, 
  3.7383435228481708`*^9, 3.738343869063518*^9, 3.7383871562294254`*^9, 
  3.738409620631344*^9},ExpressionUUID->"ff7a4388-e484-4429-a27d-\
0f16d1831800"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999775510204081`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,46,22,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.738242921201745*^9, 3.738242965574213*^9, 
  3.7382432776380067`*^9, 3.7382433289904547`*^9, 3.7382434713192763`*^9, 
  3.738243509667266*^9, 3.738250559429881*^9, 3.738250621885891*^9, 
  3.738300321696171*^9, 3.7383408102858305`*^9, 3.7383432230180073`*^9, 
  3.7383435228481708`*^9, 3.738343869063518*^9, 3.7383871562294254`*^9, 
  3.738409620647347*^9},ExpressionUUID->"14927d26-ea5e-4f30-a597-\
8ec5fd5a0678"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999775510204081`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,46,23,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.738242921201745*^9, 3.738242965574213*^9, 
  3.7382432776380067`*^9, 3.7382433289904547`*^9, 3.7382434713192763`*^9, 
  3.738243509667266*^9, 3.738250559429881*^9, 3.738250621885891*^9, 
  3.738300321696171*^9, 3.7383408102858305`*^9, 3.7383432230180073`*^9, 
  3.7383435228481708`*^9, 3.738343869063518*^9, 3.7383871562294254`*^9, 
  3.738409620659382*^9},ExpressionUUID->"be8ff51c-63db-4ab2-b2c9-\
0326503703b9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,46,24,32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.738242921201745*^9, 3.738242965574213*^9, 
  3.7382432776380067`*^9, 3.7382433289904547`*^9, 3.7382434713192763`*^9, 
  3.738243509667266*^9, 3.738250559429881*^9, 3.738250621885891*^9, 
  3.738300321696171*^9, 3.7383408102858305`*^9, 3.7383432230180073`*^9, 
  3.7383435228481708`*^9, 3.738343869063518*^9, 3.7383871562294254`*^9, 
  3.7384096206753545`*^9},ExpressionUUID->"c595bd0a-b7ba-43b0-acbe-\
f626786c1f3f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
TqCBlwd1X9h8QedeCJWfuTKO7JxYJUO3htCFe7uNIjzGEcOGR1RW7hC6OCKR
fdtyHMk26pzq2h5EliJusyki4yj8CX3TWPEAkv4tT631cQydoNSuCRLtRylF
zRfseMYQ6HmkXNXpQqMNakZrHiOotqfvWGdGLbK8n+JjPzyIbqj6Mw8Fl5PS
zNsKw151IooNuscuqIKUrpBvs5jUiVSp6t9o0b4leZNMViLOdaL9X7eebiVW
ki7RxGQKynei4AJB6yd3q0m+xaxGvn6fEB9z8JXoljrSrhj2E6/vtKPNkB2/
/sY0kdjTwlMrOVrRQffaVZmRJlLqKjnz3kgLCja837hHtZm0w/t8RvuLFqR/
KWtje6aZ9PNzrb6obguyr619bG7USvJ65GF4N7AZmSlolNP+bCPxLj+cS5lp
RJzUogwdzF2kNpE7xa0736NOgfZlI/UuUsrubuWZrw2oM882NdOji8Qunu/t
XNiAGPOonr+v6iJJPB9Nc7BpQONWT35reXaTKP5z/R3wsB5N3lXW+/a6h2Qc
9mxx3bAOnekW3NMk30+6u7c7Z39BNdK9PyhzzaGfxJ73ao+/ezXq1NDxZQ3v
JwWUvP1ixVeNTl3t/drW1k+KVWccHk94hxyPHhe65/6ZpG+/fnB/cBVyD6F7
VZwwQPqnKV4VeOYtsgkI0X3SOESqpqWhHCouQyltvZ2d34dIGxKKAdeulaGj
zYy3x+i+kHKsDnrdOVyGWiV5KYsMv5BEnV9QUEyXosriEhPqD19IUoHPvs4L
l6KjlessGe++kmyfKxeeKCxBjl9/a+zNGCZ5DbpplzAXoVtam0sbpcOkf5eW
zRM/vUJLwdwFdV3DpPFcK+8zka8QRWBXNs3OEZKQ9qDU/rlCdO1RYfWpqyMk
57nBz0V1BYidg17cRHqUpNTgmf8h6SVyZ6aJeE41RvqkXrhgmPUcDTsuGvCz
jpEk5zRLjZyeoziOL1wx+8ZIf7R+f1vlf46oeOK4pTTHSJciJdh1s56hVeUO
qu7AMVLx/acdGXlPUVtM7VbaxBjJWXJX+ecvOcjJJJLjWPk46WZdSnVufjai
eRebLvF+nGTTqCAmfC0b1R5fqZ7vHCfRyDzh4rHKRpp9GaKWc+OkxVpKz/W5
LHT0o9mTKL4JkkZ2zWhf/EMkoFqfXXBtgjTjkHl39fc91PhSZqA6boKknKaS
FPLiHnJ6GuZTnzZBsuOxTh84cQ/dJ70cyC2cIK1+rTJnfn8X7boy8HP+2wSJ
VtPTXOx+JjpxxtU8e3aCxLx9qFzYLhNxvzvnYLI+QfpsQB87tSsTPQnNq768
a5LkFaB//HV4BjojelWKknuS5DpL5VOpkYEqyiVCQkUmSQ5G5/5e+5WOWJo8
S5dkJkmhdFW826/TkfuN2Uk79UlS4LD3iOr5dPQ/Ftmmow==
         "]]}, Annotation[#, "Charting`Private`Tag$119933#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
S2Oa2izkdHtu0khhkjj+oWRRwT8L/Q9rERrs
         "]]}, Annotation[#, "Charting`Private`Tag$119933#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
O89/+rGZ6H+5+J7g
         "]]}, Annotation[#, "Charting`Private`Tag$119933#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, Annotation[#, "Charting`Private`Tag$119933#1"]& ]}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["z", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"\[CapitalOmega]m\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Latin Modern Mono", 10, 
       GrayLevel[0]}, Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{0, 4}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=0\"", "\"\[Beta]=0.01\"", "\"\[Beta]=0.05\"", 
       "\"\[Beta]=0.1\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Latin Modern Mono", FontSize -> 10, 
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Latin Modern Mono\""}], 
                 ",", "10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7382281483977833`*^9, 3.7382281880559874`*^9}, {
   3.7382282353748293`*^9, 3.738228344334833*^9}, 3.738241829490546*^9, {
   3.738242533012492*^9, 3.7382425625459404`*^9}, 3.7382429213817225`*^9, 
   3.7382429657284374`*^9, 3.738243277773888*^9, 3.7382433291553607`*^9, 
   3.7382434715793085`*^9, 3.738243509923266*^9, 3.7382505596939106`*^9, 
   3.738250622105894*^9, 3.7383003219394903`*^9, 3.7383408105606785`*^9, 
   3.7383432232593656`*^9, 3.7383435230905237`*^9, 3.738343869273021*^9, 
   3.738387156373453*^9, 
   3.738409620767377*^9},ExpressionUUID->"b92567a9-f59c-4bd4-9ca3-\
7ca0ac964866"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"y", "[", "t", "]"}], "2"]}], "}"}], "/.", "S1"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"y", "[", "t", "]"}], "2"]}], "}"}], "/.", "S2"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"y", "[", "t", "]"}], "2"]}], "}"}], "/.", "S3"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "t"}], "]"}], "-", "1"}], ",", 
          SuperscriptBox[
           RowBox[{"y", "[", "t", "]"}], "2"]}], "}"}], "/.", "S4"}]}], "}"}],
      "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Beta]=0\>\"", ",", "\"\<\[Beta]=0.01\>\"", ",", 
      "\"\<\[Beta]=0.05\>\"", ",", "\"\<\[Beta]=0.1\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "z", "]"}], ",", 
      RowBox[{
      "HoldForm", "[", "\"\<\[CapitalOmega]\[CapitalLambda]\>\"", "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Mono\>\""}], ",", 
      "10", ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Green", ",", "Red", ",", "Yellow"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7382283778691683`*^9, 3.7382283863691773`*^9}, {
  3.7382294129088354`*^9, 
  3.738229423823605*^9}},ExpressionUUID->"65dbc26c-899f-4e44-9629-\
09f8b31d5e2a"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999591836734695`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,47,25,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73824292147215*^9, 3.7382429658195963`*^9, 
  3.7382432778338904`*^9, 3.7382433292119884`*^9, 3.7382434716632776`*^9, 
  3.7382435100152664`*^9, 3.73825055978188*^9, 3.738250622193864*^9, 
  3.7383003220232663`*^9, 3.7383408106230173`*^9, 3.738343223378047*^9, 
  3.738343523191222*^9, 3.7383871564294233`*^9, 
  3.738409620839392*^9},ExpressionUUID->"78dca26f-e1c4-41c2-aca4-\
61941455d206"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999591836734695`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,47,26,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73824292147215*^9, 3.7382429658195963`*^9, 
  3.7382432778338904`*^9, 3.7382433292119884`*^9, 3.7382434716632776`*^9, 
  3.7382435100152664`*^9, 3.73825055978188*^9, 3.738250622193864*^9, 
  3.7383003220232663`*^9, 3.7383408106230173`*^9, 3.738343223378047*^9, 
  3.738343523191222*^9, 3.7383871564294233`*^9, 
  3.738409620851369*^9},ExpressionUUID->"a4c3b391-1125-4eb6-88e5-\
eb9bbb20e503"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"9.999591836734695`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"",2,47,27,
   32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73824292147215*^9, 3.7382429658195963`*^9, 
  3.7382432778338904`*^9, 3.7382433292119884`*^9, 3.7382434716632776`*^9, 
  3.7382435100152664`*^9, 3.73825055978188*^9, 3.738250622193864*^9, 
  3.7383003220232663`*^9, 3.7383408106230173`*^9, 3.738343223378047*^9, 
  3.738343523191222*^9, 3.7383871564294233`*^9, 
  3.738409620867369*^9},ExpressionUUID->"46a75da8-e338-40e2-a1d9-\
22db6d838aa0"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,47,28,32864575987067180187,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73824292147215*^9, 3.7382429658195963`*^9, 
  3.7382432778338904`*^9, 3.7382433292119884`*^9, 3.7382434716632776`*^9, 
  3.7382435100152664`*^9, 3.73825055978188*^9, 3.738250622193864*^9, 
  3.7383003220232663`*^9, 3.7383408106230173`*^9, 3.738343223378047*^9, 
  3.738343523191222*^9, 3.7383871564294233`*^9, 
  3.7384096208793693`*^9},ExpressionUUID->"d47f5942-4e69-4859-967f-\
744949d9eac8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
rcH2GfB/Aksosg==
         "]]}, Annotation[#, "Charting`Private`Tag$120023#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
Xd39MI8cbg3n710fxsTb3lk2dMyjX9pDXDK1w5jAG8ses4F5FKj3RSRR9Dfm
Lpfw5tD0POo9rB1qtv4b+/pAyO8jMxF5RCa8MdP+i7n5nNRIMySiOK1/tQxO
f7FgPiUVbnMi6u/R20yP+Iudmrj7OMqOiCwCs2lUX/zFbl+7mjzjQ0Rai9sd
dftHMJvZjIeON4nojhXtu8H3I5h58N+XLNVEJOXHVqg6OILF8Vyj6Wogopv3
FgIj5kcwVQNSWthHIvqv6qtLMs8odj4grCeqk4jszuWUHw0cxZofJ60EjBHR
eJJ+0QLXGLaU+Y7rHCMJda/OiKhJjWHuT6Tacg+S0I0PHz66oDEMp856dpaN
hDorWeTMPcewRKrP5bpHSegyY/6J5oox7D8TfjEZSRJ6XfdmaNlgHPvzzann
qxYJBS/k2vxxGscOHGf+7qxHQlahxsuFoeNY29fIrHFDEopx8rXqezSOZTXp
llWZkVCReyDvk6lxbNMksTfHmYT4OOfYFaMmMMk6ZqeqCBLasP8oid2exCJx
51VTH5OQ5oOa6P7sSSz81ze+F09IiF6SKrD79SQWEft9pjaPhDTiisZDOyax
jCmGt18LSOhxpRHfVaZ/2Ebdlb6aYhIyidhafRv7D9tjP8ixTTnn+OMMCeIp
/zDta71nhzESKpZuZo57/A8jnvtK1dhEiUc00GK59h/mGybYFtNCib8yorR8
8R8mqd5hwfKVhFKD3GsG7acwOY3B14W/SIiVVbXtoc8U1nGJevvZbxKaeWEX
pxU+hQ2cJwTk/6XM37WJNKeUKSxMS+pYzTgJydZp/81qmsJCx3TkZOZJSCv+
1qnKr1OYzOFqaTsSCQkXfNFpGJrCPrLi9qcvkNC+FCOduwtTWEAQWx3PKgnN
W4WpaAlOY6sV34sy9kho+b2G8UepaezqCyNeemoycuuMPS2jPI2x4tnltWnI
6Edc4GSr4TQWGHN3Y4iOjLiWMoz5IqexpUvtvVpMFLt/1qC9MY398B8Zf3uA
jLyrHfYG705jZ34mFAofJCP7Jl0N/fxpLChUkczLSkZ7X5zN7bqmMUfpAH83
LjKqeKj1tXxoGnsgJTnKeISM9v8u3twam8be8B3zq+Iho5f8wdMW69NYuAp3
iBQ/GXUmCSieF5zBhlysVaJEyCg9ozvssOQMxpufec5TjIz6gqiM+xRmsNS6
y222EpT43tmrimrPYP4fX9O5SJPRwtPyTnr/Gayg8q38lCIZ3UqDj5ZhM1hm
UoiQiDIZCdnXiT6MmcHcbIk7PqpklKLpkz2fOoPFv1aSOYojo0uLZQJ/K2Yw
jm7bK7Q6lPl6TjKuapzBDt/N6nqkR0bUBQ8bY1pnsMRgl1gwJCNhib6C8e8z
2OrNmeoSEzLSbwc76i3K8z435Eg6kNE7lXvrfTSz2I03EaOrTmQkYtDllM00
i0Wbrch2uZKRa/rSX/qjs5hqFyHyuTcZfb13/Y2Byix2UZVZYPISGXkYOVS9
R7MYz+v8Ma7LZNTyVljohPYs1k1DmjaLIqPNgq8ug+azWL8Xv+XGf2T0aP7w
jVfBs9i8ryPrVAoZJbTG3mq+PIt9WhdVjs8go6nsj9d6r81iTXNDvxUfkJHS
i+Kor3dmMaFvaab1uWR0pqL6/rmXs5hN6xv9ayVkxKB+blTuzyxWY8RYR9VL
Ru+t18qeTMxify5q6jwaICMHWqtI+rlZbCwwbkHrJxndd3koVb4+i5XkeGj0
jpNRA4nQ9pBtDrtIln3dsE5Gy8Sze7Xcc1jGbsv3iR0yOsnnUtjLP4eNv2uP
FqRdQIdlh29OnJjDHAc9pr8eXEAFh2QEHp2bw6YixERYRBZQ7Tb/lSDtOYxw
mJW+68QCwovvNuAM57B4bu0vz04uIFyammyj1Ry2dzm9OvHMAuJ98gBMAij9
TyypGpgtoDt07aI/s+aw84tm4f2JC+g/hke+D57MYR8qP4zFpS6gOsfnO/oF
c9jLY7wI/3ABPbvyR/v+2zksqBP7oPRiAbn88lOtaZ3DZnS6OYzbF9DGU7UC
ya9zWEnJCvOf3gVE/SviT1rvHEatkbmb+HMBMd9wW9EensMS3uv9VJ5fQIRa
djutxTmMy09/fpNtEbW+UPkRsDaHuf7RPR7Bu4i0K7wep2zPYYbD9KEcooto
nb1boZp+HjMa/5fySmURraiUnHh6dB67L7x+zdZ5EfG1l72YhHksfM87h6Zm
EeXMGajf0pzHhrUXienNi+hjSN6auN48RnsgbJ9u9yLq+HyFU890HoudvNZw
bGoR3bs253rKfR7768QnkMCzhBKb9mU/9J7HFiN5rUBsCa2/SHfZ8J/HcGJa
vwUUltAJM8OveWHzWIUbswDBcAm5jVmGPo6fx9ZJ/ZW3ry8h1YNfr3y5RYnn
XeDDa6lLKN+ZM3Th7jzmsvFfWE7uEhq3bfWQeDCPbaOU66b1S+gs40TOhaJ5
bCJ6urV2bQnNR+vYqbbOY4PWZmdbw5bRi3s4vrr2eUygldHR6uYykt1VNFXu
nMd6RKfx7PeX0R9tBt1j/fPYb5OFUerKZZQ8FKtZPDqPiYjf+vN9bRndNeIr
oZucx0paB67V7F9BWQYCfebT89h376bkFp4VFKBwJ2iKNI8ly7BoOp9dQc0+
1X+6tuex+CbGttLrKyhj7CbTzt485nvJw2n13gpq+jwgL0pLxJIYsyV9ilYQ
qf3ePQ9GInaV6NU8/HUF/ZznvF3MScRclTUv7B1dRb1S1iPWMkTMiuwTHNO4
itjMOQLU5IiY+kBPbd+3VSS5ox7MpUDE/jrf1HaYXkXVPldX3qsQsVWdgo5D
nGtoLORRxd8LRIww+phx/eIaarzEWJGjRcRI4TOLmzfWECuZzsVCl4htyg4F
K+WsoX0SY39qjYjYEt95kknHGtoxyRE3tiZiI1/ec56VWUerrCKEOVsiVtM3
Ps2gtU6pX09trzsQsQfBWz9ZHNeR6p8ApXxXIlb0/gixK3UdeTk8Kaz2J2I5
IdVtUpvr6GfOtz3hWCJWOqdjUDGwgcxvXw4IvU7E7i3Qmv9Y3EANFq56TTeI
2JvQkgfo0CZiExGxIiQRMQ8j3IcOnU3U8MPLTyOdiL016PDda9xEj3MjuiLu
EbGWcc3DisOb6NoVhc8vMolYXGYl+fXWJpr8jd2jziZiH6P32/urbiGXUBrR
xOdErLJu9LFy9RY6SwzpyisgYrPrg2nZ37eQ+Itp1ZoiIrbg7Leiu7GFFhvW
XH69JmIWJzqUrp3ZRka4mynb5USMJ/yShM/HbTSW/CmzqJmI6VcfC3w3soMU
Ry8kp3wiYnnCIXRj9Lso+EDp3UttlHxrCyE36V00a3v36+kOIratXM7rELGL
bphGvrr/jYh52hr9Bo49lPlj7nPXCCV+bc4/ErJUID3/Jy9pjIgFidj8CrlA
Bbv0KZ3nJyjjbb/5PmdFBcHuZbKvpoiYW8UdWZ84KuDK8YqzIxGxhk+F7NnD
VHDhohOd5jYRyyrJJ0s/pIasgpu0GztEzIBhYvX+O2q4t/dZ7OUeEfvqw0+N
66SGeKveOVpaEhZPEubRpKOB21bGW/cYSVjJ41cmmiE0cNeT+onCARL2jqDt
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
5MSH/wFnyPAe
         "]]}, Annotation[#, "Charting`Private`Tag$120023#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
Um5ocJHskYYeqZ0Ra4hhPsmvSzZW6Xb/+nEbUH/4WOs62faCp/mLgm3gxPIr
vxdku7J/ETlFsAX2A0b9uWQbK5o5gKsttEgEyL8j2/aGYtSDSFvwiAmsryL7
jmGt0qMaWwjmeWnaQ/azkIAPlhftYOGGg9KxbRLONt80ay1lD2zvOCdYydZu
bBVcM7SHh5Yx4afI/uXbMlHsZQ9dhpNpwmT/uUP1PKfYHpohWk+dbI4LqTeD
pB2g8E5+vh/Zwxr8xyjBEd7XZ+cEk+3utVQmaeMItga3n98h2xC3S44OdwTe
5wetY8g+e43ve22dI1D3mQdkk63MI5euY3wdOizc+lrJLpi6IV180wlCvbZQ
F9kveGN/F6Q6gYCyy/O/ZAeEcsa2f3WCuyWikhP/n/+eNXUhnTNs902sbpFd
YxzHm/jKGVq4RId4d8jvk4P9uwZ9LnB9X4ODINnJn/4MPt3nCt7BKmMiZD8v
746kFXSFTquZxvNkm+qrtHp7u0LoCQstTbK/78im69G5wc9IrY3rZK/6WrSr
aLjDS42cY25k27lvCem6u0Op2UPeG2Qv2290hSa5Q6IrvXQA2SMXs7t9Jtzh
1TzXoUiyDaI4WMMfeQC7/bGoXLJbFc3Mz7l7Qszt28oFZJ80kuYpuOsJ3lb0
i4Vkn/nxZOrCc08oiahUKiWbOcSzNbvGExiv6T6pIfuEpo1bGscNOPGRUXaQ
bKsjfJrirTcgXmHjAdMu+f6j3n4uWN8bbN7bhh8ne79Ni9Yre2/YLRULOkm2
s1mxyPgtb/hyhMr8NNksMtNlZYXewNntPCpEdulq46XEYz6g0avCp0w2fvfa
Y82/PsBtuflHlexjKckCrGs+kHcwNFKDbP6Q+C1KBl+41HS0X5fs9BeKJWfV
fIG3aOWyMdntq/6b3976wnFf7J4z2adD7qTK3fODK7xDm65ks76to67N9IMO
l5cuHmTf2WoX8KryA5urHco+ZDMfjVs/teoHP0sefr1FtijLB69O+5vA+VOV
KZbswRZH7wY9f5Ap+MdfTLZOZgP+SDIQAqguXSkh+38V2H1QywEYB3AuFbW6
TogVqnmpLHOoUPJ0FjsteUleYrkiciTadO2l2Zvtt/1s81rolSNcdGqym7qY
d7p0S4lUVHTohPSiVJ7fn5//vt/nj+ePbz+5UkxuFoIhc0RZQbn0u7VMIITZ
svgGC7rRViRIswgh3rFr3SN0w9RhhilSBKn9R/X1aM82J1KYJIYjrwrVDWjz
xsCODrUYohdLJG/RE+XGr/wSMbBHtiY0o38Mq42u/WII4LP+taNVjBTGHJ0E
Wjd7FPxCK0scyIHKLKgtvbe3l+ofO1vS3ZEFfXnx/n3ofcyu7c7OUmhcaS0e
RLdFuqc82y6FB27nZGPo9qEzHWF/pUCEaG/Rxnqqa1TCzlmFx+GKT6vDXLSf
ZmRh3YAMhoMUvHnoqMsZkUaaHFxHaab5aCEz9NYeHznktDRvC0CXz/S6sy5K
DrZ5VoKF7uHbYlwK5eBWKtQtR09ZlBwkilaAX063dQU6Xcm10yQpYHeVYDAU
Ta754HczUwFXy9/tCkd71nVVLbymADfX0Mmr0bV/9n9ZMU4JCXu/MbhoGSff
MdWshF51YHg0esNQfVjTayV0lt2NW49Oihh8t61LCZFDBfIN6I2Ls07lTVOB
hTv/aSya9uRNS/AxFQijo0Z3osvGf4oxLz8Bh5eksA+iH29pb0q3qcGy03vt
ISpP8Y5TbT1qSEyfzElFX0x2sj/gogHfF+XsNPQq+W9VM0cDr7Tgz0dz4yqe
L3mogab7XpdF6CC79Ql19wi47vSdEKO95oTTl74l4GMyI02CXiaShpj7CeDy
WkKk6AjLJHvfYC14vLea5Gheo6wzq0ILU2g3kgk0PXFHqaBKB50O8cFa6n5p
nru6W3UQyymaoEP33o2YqxpHwiX9n1wSzXL3FsxkkzBqHao0jFH7yzX/7hoS
Csy5lefQ1T7Z9fTPJ6GdZzp2Hj3BWZnxYKIeTN4nWNlol6KtYwRTj/9yd14O
+gL7OIvg66GkYtGBS+hiZuLaUAcD3K6Jo+eiCfbpVXYLDMDYz3lBWRvm4fgz
xgAXcs8z8tExbYGiZRcN8DdxoJZyVV960tlqA+RNYmYWoDfZMk5P/WwAen6w
byHVP9vbnWdvhNSAGS8pg51gFnu6Ef4D0e5LwA==
         "]]}, Annotation[#, "Charting`Private`Tag$120023#1"]& ], 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
FBJSbbc5tIoiImzVz1p/Qk9+MLqwzSyj/bGlxaMrjUiapFEl+3oZoShHy6P6
n1GJFzr3wWcZJZypq1PP+4zIQrd51jeX0FOrhIGjVl9Qp2WIj/h/S0iO/kLW
bncTKs0L9fLuWUSvSsMNfeWbkc79BW2Ox4tIl/fMs6OPmpGGbufiHbFFFPos
q4Te4Svij5TUHdVbQLrL6x89KVoRQ1qGnBDbAqIPiUpM9mhF08X9P+7UkNDO
NL39VF8rovjkfE1sYh5RQG4vqmhDD166isyhOTTzj/qmb+h3VMrHn297eBrl
vrX4lMr/A0lLW1p4V06hwrnSgVDrH4jBry+Z1XoKLQSe/z7x8AcSDHi7Q1s4
iRKEhKTlWDpRSL/IvyyNfyjkdUDZE9ou5Emz3v4ufQzpedouxjP0IBsa6S0/
jTEUOTRO9Ve/BwmS+GfeL44iC59wl4ykHpQRIDjUZDCKctMDQjXZe9EzGHqw
eGAEvZf8kSZ74ieSoLIsDUR/0ZRyzs+AS31I8InVr3eFg+hU2cOhC89xn/yQ
N8A6iHKa53dCZ/vQyzNtRutTf9C31PdX40L7UbLDSemjuf3oTYfGc6tnv9GR
1LSov6gX/TYPfKuwMoDItnro22XbUJHkf6peRsNoIWlUwFm1FamIhNqtBgyj
QMYBXz9iC+o/eMPfPWMY6RTV3if5NiPLj6I3RUaHUWGp66jw10akcK+1oNBv
BIGUw1ldn2qUzNz84knSKCKT566WzfNFuqaqQcnF44hM8F39I5mL2GpD0n5R
yzgKO55ZpMtxC3O9UXMscRr3trVBIFMq5vbewPmd6AQinpeDIxz5WEuJwSXr
vAl0NUpZjOxVBeZlz3ju2b1/yI5y1RVEvmCbFtbYlvIUstBc/3217wsWf/rr
vUCzKdT9XNbTObYJm5rKvV3kNYWYHdd7RiabMeKP+6uCuVOozdyUQ+hhK8Yw
3zQdRTONyBpurb+368A6Hu9uHcamUSORb+NvSQemFVND+6t7GlHZHmEKJ/uB
vedn6DGankaGd6epTj35ga2lkPTdDs+gKBfa9CtdnVh5xe8Tas4z6GNAFnFI
qAdjk8tynN+cQcY3SifIPHuwujR7Q/MDs6g7/iNbYXkPljxayh3KPYuuyZZ7
Jqj3YsLuIl/pVWaRw7VslpaLP7H5UI1Y6Zuz6LJt9U6Fdx/G/t+NUlieRXKR
rskhBgPY31+Gjotlc8gmbiBvP3IAy+K+3VlTO4f+aPexS1YNYO8up2s5Ns8h
b91WwRihQaxn9PepM7/nUOchbX/TjUFMNCBuXWJ/Dl2+cfeVqfYQFnLHZC4K
5lGU1r8qWrshTF0jjIpbZx71/NDduh84hEU8M6y/T5hH5t6PKZSKhrCwlKgJ
YZt5pLW001ZNN4zZ1jexTAbNo0QLync/64YxV7kHdXIv55G4O0uB0s9hbMjF
kou+dB7dTlv0DpwbxshYp6sb38+jiPffHBI4R7D0M/W6y5/m0SXVrLKj3iPY
56XAmwq/5tFYrF7hIvsoVs1V+7V4bx51rE0LKouPYtNipSU8lCQU/elTgwMa
xYJXeAmhtCT0vYJJ2uzKKKbNIrtGyUxCQfR5oo3loxgjRaOBAh8Jvax+1bei
P4YZP0wZ9D9HQr6L2ZZ/7cawTlbDFh5VErLwN1op8B/DlK8sXijXIKFbdm4W
3ZljmInE83dv9Uio0NmbK2dyDNMppydNWpAQN9ssq1zIOHaA22cuy5uENq0b
xLD4CSxU9+OhuHQS0nz44WbP4wns3ehX9dJHJEQjRubd8XICazYs5enKJCGN
qMIx/7YJLI5S6DRlDgk9qTDkDmX4h0nm7WPChSRkHLi99jb8H5b61br/63sS
4okyIIok/8OQf21l+QcSei3RyBj15B/23XV+MKcaj0fI23yl6h8GT7+5XcPw
+CsCS8qW/mE/3lx2OdFEQvd8nD/8tJ7EGOGkyHovCTEzKzU/cp3E4mZUTDZ+
kdB00aUoreuTmMnWYdW9fjx/YeMpdsmTmECeTxXnXxI6Wa09lFE/ifHf0rr3
8B8Jad2JO1XxbRLToY9T/DpFQgL5rTo1fZNYo8tTE/JZEqJONtRJWpzEko8Z
oJgFEpqzuKaoxTeFMb2Qv0y+RUIrdRpGDeJTWNKUitD1HRJy+h4uL6kwhREW
Gg+u75FQf5T3RJPBFBaX89bqAMUCYl9ONeK+MYXN0I7d8KLF7fxVgzIa9+i9
xp90C8il0mb/Z9IU9syBM0yLYQFZ15/X0MubwlaKmHYUDi6g/VZ7s0vtU5gA
f3GP16EFVP5I61tZ3xTWmksKZsbnCt3g663t0SnskQ7tSiX7Airm8Z0y35jC
dv2LGfiPLqDvsbxyanzTGM0S+cuLxxfQ/dSOa4fEpjHUVFl1TmABdfuQGXXL
TmMsK917YkJ4fO+slYS0p7HSAzr9x0UX0OLTsu80HtOYhlBUU7TMAopLgYYL
16axbKkLrpWyC4jfulro0a1pzNjhSfHq6QWUrOn6eO7eNNZmzv0hWXkBBSyV
8g6VT2NHRCbpDTUWkNNzktH72mksM+PX/X6tBUSe/6j2VtM09jq87YTf+QUk
cKI7f+zXNPb4zBWJr4YLSK8FLpFvT2PX9rheHbRcQO8U0za6KWawtJ6q4LZL
C0hQv93uMcMM9lEjnjrddgE53l8eojk6g1H+d3+U4LyAvqVFvtJXnMEG6VR2
TH0W0GVDm/d1aAYzr+/vDfBfQJ/fCvCLas9gLF9+5+ReX0Bb+d8cfprNYHuT
AtnCNxdQ5tyh6Be+M5hV40DS97gFdLcpPK4xaAbT8p2TskpaQJOPG8I6w2aw
AJuMrdWUBXS66HXIt0R8vYGqN+YZC+hMeeUD1eIZrM1lZ7+5aAHRnlMdkf47
g/mXXR9LbV1AdRfXS3PGZ7A8Nc7THB0LyIbS4gbNLB4PgyMUdy+gBw6PxMs2
ZjAbkrE05eACqiERmx+xzGKt/Ut80YsLaGX+7H4Vxyw2XE22eG9tAUlxOxR0
8sxiIxh1V8n2Ajp0cuD2uOgsNpj0X4gQzSLK/0+SN1N1FiNMF8uTuBZR1Q5P
sI/2LGb5+43LveOLiCCyV6NiMIuJ/9pm0RZZRCopyidrLWaxSoal63OnFhFX
zkMw9prFrt+Wfyyut4gSqVqEfmfMYo0MMlwPbi2iCNpMt4c5s9g7Ewdj7juL
qNr2+a5e/iw2Nfxx/GPiIsoN/qv94O0slm19gNvwySJy+OOu9KEJ/3xK4Yf3
tYto86lyvti3WaztC3ziaFpE5H8C/6Z0zmI80Ywiqe2LiDHaaVV7YBazjyhl
HB1aRMQq1ktaS7PYGefb94eollBTkWK/1/osphqj+kWMaQlpl199krwzi3n5
7Hve51hCG6wdspU0c5hhRrFCvdgSWlV8I/r06BxWsOBq8sB4CXG3lBZNwBwm
Uhv+1rlwCWXN6p+L05zDYhwbKyvfLaEGv2frIrpzWMuK2qeT2BJq+xrMpmsy
h0k3jzFH9y6htLBZx1POc9g7dfWTozTLKKae+vEjlzlMZVm6x/zQMtoouu+w
6TGH8b9pWSMdW0aipgbfnl2bw9r9pBfvKy0jp9EL/k/uzGFzsT97X3guI6WD
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

         "]]}, Annotation[#, "Charting`Private`Tag$120023#1"]& ]}}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["z", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"\[CapitalOmega]\[CapitalLambda]\"", HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {FontFamily -> "Latin Modern Mono", 10, 
       GrayLevel[0]}, Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{0, 4}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=0\"", "\"\[Beta]=0.01\"", "\"\[Beta]=0.05\"", 
       "\"\[Beta]=0.1\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Latin Modern Mono", FontSize -> 10, 
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Latin Modern Mono\""}], 
                 ",", "10", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738228387245265*^9, 3.738241829606547*^9, {3.7382425332698126`*^9, 
   3.738242562653942*^9}, 3.7382429216447687`*^9, 3.7382429659659724`*^9, 
   3.738243277977275*^9, 3.73824332936932*^9, 3.738243471931307*^9, 
   3.7382435102633*^9, 3.738250560013881*^9, 3.738250622421864*^9, 
   3.7383003222407103`*^9, 3.738340810891328*^9, 3.7383432236118884`*^9, 
   3.7383435234251165`*^9, 3.738387156653453*^9, 
   3.7384096210393763`*^9},ExpressionUUID->"73f02b37-82d2-4e8b-8446-\
ac7b3e5ead6c"]
}, Open  ]]
},
WindowSize->{1264, 637},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.6 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3296, 74, 226, "Input",ExpressionUUID->"a4099d8c-5c38-4ceb-a55a-ab87707b22d2",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3879, 98, 3026, 69, 200, "Input",ExpressionUUID->"bc3849ae-286b-4cbd-8c1d-487fd12b0418"],
Cell[6908, 169, 665, 13, 37, "Message",ExpressionUUID->"6a101f97-edb1-46ea-adef-642454ea81be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7610, 187, 3075, 70, 200, "Input",ExpressionUUID->"c99eea1f-ff0a-4030-b48e-af183545a0cc"],
Cell[10688, 259, 710, 13, 37, "Message",ExpressionUUID->"4a9951d2-9ca6-4546-9b1f-3b1e0913fe8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11435, 277, 2973, 69, 200, "Input",ExpressionUUID->"bea849f7-4ec8-4d59-86d2-dd679110e8a8"],
Cell[14411, 348, 705, 13, 37, "Message",ExpressionUUID->"3cc31939-9291-4e97-8fff-58d06c6ba7b2"]
}, Open  ]],
Cell[15131, 364, 5470, 198, 263, "Input",ExpressionUUID->"517e99ce-8261-4f6c-9184-3006ff6bd45f"],
Cell[CellGroupData[{
Cell[20626, 566, 7378, 224, 452, "Input",ExpressionUUID->"874cf025-4b15-4041-a143-af40e0d825be"],
Cell[28007, 792, 686, 13, 37, "Message",ExpressionUUID->"aa7264cb-2bb6-436d-8064-18ecc289a156"],
Cell[28696, 807, 686, 13, 37, "Message",ExpressionUUID->"1c8a67d5-9233-4899-b517-823d838f177e"],
Cell[29385, 822, 684, 13, 37, "Message",ExpressionUUID->"412e9186-b200-48b4-b676-55c384f9de8a"],
Cell[30072, 837, 645, 12, 37, "Message",ExpressionUUID->"200a64a9-a646-4141-a0da-df91881a4c66"],
Cell[30720, 851, 51309, 924, 378, "Output",ExpressionUUID->"2f3dcf6c-e87d-44a0-b17c-172676f2f10f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82066, 1780, 552, 18, 88, "Input",ExpressionUUID->"985b9cf6-d2ad-49d9-a899-adb645a6017e"],
Cell[82621, 1800, 705, 16, 78, "Output",ExpressionUUID->"089a6d43-07a3-431f-97fb-30cee44346ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83363, 1821, 5672, 133, 379, "Input",ExpressionUUID->"5daec9c8-6b34-40ff-9532-6b4f41c1a270"],
Cell[89038, 1956, 77459, 1357, 153, "Output",ExpressionUUID->"3f6709b2-77be-4811-b8ec-48bad26b34a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166534, 3318, 2601, 76, 252, "Input",ExpressionUUID->"e6289c80-a31a-47cb-aa76-a19ff21ad69c"],
Cell[169138, 3396, 629, 12, 37, "Message",ExpressionUUID->"f4b9d828-6213-49f7-b7de-a3b8c329ea02"],
Cell[169770, 3410, 627, 12, 37, "Message",ExpressionUUID->"7ad4de38-e671-442b-8e66-415cbc82a5fa"],
Cell[170400, 3424, 629, 12, 37, "Message",ExpressionUUID->"afaf2602-fbc0-4322-b4a3-50ed90cb4d9b"],
Cell[171032, 3438, 588, 11, 37, "Message",ExpressionUUID->"2fb548c8-7bb5-4260-9e7c-4c1ea6620cc0"],
Cell[171623, 3451, 83821, 1463, 344, "Output",ExpressionUUID->"08498efe-98e4-4f26-84e8-bd16f355d6cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255481, 4919, 1757, 47, 155, "Input",ExpressionUUID->"03fe0951-4f2c-424d-86ff-03e9fa06071d"],
Cell[257241, 4968, 40665, 757, 409, "Output",ExpressionUUID->"d461b32f-665a-4915-ae16-d403568bc498"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297943, 5730, 2526, 74, 252, "Input",ExpressionUUID->"7cc477aa-33cb-49f4-a315-8fa95c3ba535"],
Cell[300472, 5806, 790, 14, 37, "Message",ExpressionUUID->"ff7a4388-e484-4429-a27d-0f16d1831800"],
Cell[301265, 5822, 790, 14, 37, "Message",ExpressionUUID->"14927d26-ea5e-4f30-a597-8ec5fd5a0678"],
Cell[302058, 5838, 790, 14, 37, "Message",ExpressionUUID->"be8ff51c-63db-4ab2-b2c9-0326503703b9"],
Cell[302851, 5854, 751, 13, 37, "Message",ExpressionUUID->"c595bd0a-b7ba-43b0-acbe-f626786c1f3f"],
Cell[303605, 5869, 72737, 1281, 212, "Output",ExpressionUUID->"b92567a9-f59c-4bd4-9ca3-7ca0ac964866"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376379, 7155, 2527, 75, 252, "Input",ExpressionUUID->"65dbc26c-899f-4e44-9629-09f8b31d5e2a"],
Cell[378909, 7232, 768, 14, 37, "Message",ExpressionUUID->"78dca26f-e1c4-41c2-aca4-61941455d206"],
Cell[379680, 7248, 768, 14, 37, "Message",ExpressionUUID->"a4c3b391-1125-4eb6-88e5-eb9bbb20e503"],
Cell[380451, 7264, 768, 14, 37, "Message",ExpressionUUID->"46a75da8-e338-40e2-a1d9-22db6d838aa0"],
Cell[381222, 7280, 729, 13, 37, "Message",ExpressionUUID->"d47f5942-4e69-4859-967f-744949d9eac8"],
Cell[381954, 7295, 114165, 1962, 212, "Output",ExpressionUUID->"73f02b37-82d2-4e8b-8446-ac7b3e5ead6c"]
}, Open  ]]
}
]
*)

